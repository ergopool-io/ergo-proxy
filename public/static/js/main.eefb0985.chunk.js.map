{"version":3,"sources":["build/production.js","hoc/with_layout/withLayout.js","utils.js","network/api.js","build/constant.js","store/reducers/proxyReducer.js","store/actionTypes.js","store/reducers/apiReducer.js","store/reducers/uiReducer.js","store/reducers/index.js","store/index.js","store/actions/apiActions.js","layouts/main_layout/header/menu_bar/menu/Menu.js","layouts/main_layout/header/menu_bar/MenuBar.js","layouts/main_layout/footer/Footer.js","layouts/admin_layout/navigation_toggle/NavigationToggle.js","layouts/admin_layout/AdminLayout.js","layouts/admin_layout/admin_system_layout/AdminSystemLayout.js","components/panel/Panel.js","page/admin/dashboard/mining-tree/Connector.js","page/admin/dashboard/mining-tree/MiningTree.js","page/admin/dashboard/notification-center/notification-row/NotificationRow.js","page/admin/dashboard/notification-center/NotificationCenter.js","page/admin/dashboard/AdminDashboard.js","layouts/error_layout/ErrorLayout.js","page/errors/error404/Error404.js","page/errors/error500/Error500.js","page/errors/error_maintenance/errorMaintenance.js","page/errors/error_coming/errorComing.js","components/popup/Popup.js","layouts/main_layout/header/search/Search.js","layouts/main_layout/header/Header.js","layouts/main_layout/style/Style.js","layouts/main_layout/MainLayout.js","formatter.js","page/main/earning/Earning.js","page/main/hash_rate/HashRate.js","page/main/Index.js","page/main/static/StaticPage.js","layouts/user_layout/address/Address.js","layouts/main_layout/header/menu_bar/MenuBarNavigation.js","components/modal/Modal.js","network/proxy.js","layouts/user_layout/navigation_toggle/NavigationToggle.js","layouts/user_layout/navigation_header/NavigationHeader.js","store/actions/proxyActions.js","layouts/user_layout/UserLayout.js","page/user/chart_filter/ChartFilter.js","page/user/main/card_row/card/Card.js","page/user/main/card_row/card/CardTitle.js","page/user/main/card_row/card/CardContent.js","page/user/main/card_row/card_col/CardCol.js","components/timer/Timer.js","page/user/main/proxy_card_row/custom_col/CustomCol.js","page/user/main/proxy_card_row/custom_col/custom_card/CustomCard.js","page/user/main/proxy_card_row/ProxyCardRow.js","page/user/main/card_row/card/CardTitle2.js","page/user/main/card_row/card/CardFilter.js","page/user/main/card_row/CardRow.js","page/user/main/MainPage.js","page/user/config/ConfigPage.js","components/zoomable_chart/ZoomableChart.js","page/user/wallet/wallet_box/WalletBox.js","page/user/wallet/WalletPage.js","page/main/faq/Accordion/Element/Header/Header.js","page/main/faq/Accordion/Element/Content/Content.js","page/main/faq/Accordion/Element/Element.js","page/main/faq/Accordion/Accordion.js","page/main/faq/Faq.js","page/main/support/support_form/SupportForm.js","page/main/support/Support.js","components/data_table/DataTable.js","page/admin/user/User.js","page/admin/manage/MiningParamForm.js","page/admin/manage/RewardForm.js","page/admin/manage/WithdrawForm.js","page/admin/manage/Manage.js","layouts/admin_layout/admin_user_layout/AdminUserLayout.js","page/admin/user/UserMain/UserMainPage.js","page/admin/user/UserWallet/UserWalletPage.js","layouts/admin_layout/admin_ui_manage_layout/AdminUiManageLayout.js","components/data_table/DraggableTable.js","page/admin/ui_manage/AdminUiManageFaq.js","page/admin/ui_manage/AdminUiManageStatic.js","page/admin/ui_manage/AdminUiManageMenuLink.js","page/admin/ui_manage/AdminUiManageFooterLink.js","page/admin/ui_manage/AdminUiManageIndexContent.js","page/admin/ui_manage/AdminUiManageNotification.js","page/admin/login/Login.js","app/App.js","serviceWorker.js","index.js"],"names":["BuildType","Object","freeze","Server","Symbol","Proxy","ProductionType","Production","IsServer","IsProxy","withLayout","Layout","layoutProps","Component","componentProps","props","CompareObject","a","b","exclude","aProps","getOwnPropertyNames","bProps","map","key","indexOf","pop","length","i","propName","BASE_URL","undefined","window","backend","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","console","log","removeItem","Promise","reject","ApiNetwork","info","resolve","get","then","catch","e","dashboard","userId","hashRate","queries","getQueries","fromTimeStamp","push","toTimeStamp","getQueryStr","join","share","payout","income","getLogin","data","login","username","password","recaptcha","post","recaptcha_code","getConfig","setConfig","configJson","getUsers","getUiJson","path","setUiJson","elements","JSON","stringify","getSupport","support","name","email","subject","message","proxyInitialState","node","synced","start","mining","height","peers","version","bestBlock","pk","apiKey","walletInitialized","walletLocked","wallet","balance","address","reducer","state","action","type","payload","apiInitialState","messages","menu","footer","extra","items","hash_rate","network","pool","miners","active_miners","price","btc","usd","blocks_in_hour","round_valid_shares","round_invalid_shares","timestamp","Date","user","immature","mature","withdraw","combineReducers","proxy","proxyReducer","api","apiReducer","ui","uiReducer","store","createStore","applyMiddleware","thunk","loadApiDashboardAsync","loadOnce","dispatch","loadData","getState","setTimeout","split","users","setUserPk","loadMenu","storeMessage","newMessages","msgIndex","msg","index","display","to","link","exact","title","MenuBar","toggled","toggleClick","setState","render","className","onClick","style","links","superuser","color","Menu","this","prevProps","prevState","snapshot","React","connect","Footer","renderLink","startsWith","newTab","target","rel","href","backgroundColor","column1","column","replace","toLowerCase","loadFooter","NavigationToggle","click","AdminLayout","navigationOpen","toggleNavigation","logout","history","getUrl","suffix","layoutClasses","activeClassName","children","match","url","AdminSystemLayout","Fragment","panel","connector","rotate","Math","atan","from","classes","styles","transform","asin","sin","rowsNodes","connectors","MiningTree","Panel","cnt","Array","fill","_","col_index","Connector","connect_to","NotificationRow","time","moment","date","format","content","notifications","id","tags","notificationCenter","notification","NotificationCenter","ErrorLayout","background","Popup","getCurrentMessages","resultMessages","closeAllMessages","nextMessage","markup","Search","handleKeyDown","navigate","placeholder","value","onKeyDown","onChange","event","withRouter","header","hide_search","Style","mainLayout","customClass","process","REACT_APP_BACKEND_URL2","toFixed","ergo","pieces","parseFloat","ii","splice","Earning","hashrate","blockInDay","networkHashRate","earning","res","collateral","ceil","HashRate","formatter","poolHashRate","slider","sliderHeader","sliderSubTitle","sliderLink","sliderLinkTitle","IndexContent","priceType","features","firstBoxTitle","firstBoxContent","changePriceType","priceIcon","item","Index","getData","MainLayout","StaticPage","pages","loaded","page","location","pathname","urlKey","Error404","modal","onClose","onSuccess","successTitle","ProxyNetworking","callback","errorCallback","walletStatus","walletLock","walletUnlock","pass","proxyReload","proxyResetStatus","NavigationHeader","authModal","unlockModal","initialModal","unlockPassword","openAuthPanel","closeAuthPanel","openUnlockPanel","closeUnlockPanel","setApiKey","proxyNetworking","storeApiKey","isInitialized","isUnlocked","alert","lockWallet","setUnlockPassword","reloadProxyConfig","statusClassName","Modal","UserLayout","updateUserId","urlUserId","params","MenuBarNavigation","Address","ChartFilter","visible","changeState","apply","onApply","series","card","CardTitle","cardContent","CardCol","Timer","initial","getTime","seconds","minutes","hours","padDigit","currentTime","diff","parseInt","customCol","customCard","nodeStartDate","nodeStartTime","Card","CardContent","CustomCol","CustomCard","PERIOD_STATES","CardRow","period","rotatePeriod","contribution","totalShare","validShareRatio","invalidShareRatio","avg","CardTitle2","current","CardFilter","ProxyCardRow","hashRateSeries","shareSeries","MainPage","fromDate","fromTime","toDate","toTime","setHashRateState","setShareState","getTimeStamp","dateStr","toDateString","timeStr","toString","toTimeString","loadHashRateChart","force","loadShareChart","loadDashboard","getApiDashboard","loadCharts","dataKey","angle","textAnchor","tickFormatter","strokeDasharray","isAnimationActive","labelFormatter","stroke","verticalAlign","selected","MainPageConnected","StreamingDemo","refAreaLeft","refAreaRight","zoomStart","zoomEnd","sliceData","xFormatter","leftIndex","findIndex","xKey","rightIndex","oldState","slice","activeLabel","yKey","onMouseDown","bind","onMouseMove","onMouseUp","zoom","x1","x2","strokeOpacity","WalletBox","amount","walletAmount","onSubmit","apiNetworking","WalletPage","loadPayoutChart","results","forEach","data_row","loadIncomeChart","WalletPageConnected","Header","clicked","Content","Element","active","Accordion","handleElementChange","rows","question","answer","Faq","questions","SupportForm","siteKey","responseMessage","responseClass","setKey","getRecaptcha","site_key","setResponseMessage","submit","preventDefault","htmlFor","sitekey","dataTable","columns","sort","sorting","sortingDir","dataRow","rowSelect","colSpan","row","substr","User","loadUsers","columnIndex","dir","userRow","DataTable","miningParamForm","POOL_BASE_FACTOR","save","THRESHOLD_HEIGHT","THRESHOLD_TIMESTAMP","rewardForm","TOTAL_REWARD","REWARD_FACTOR","REWARD_FACTOR_PRECISION","FEE_FACTOR","MAX_REWARD","REWARD_ALGORITHM","PPLNS_N","withdrawForm","TRANSACTION_FEE","CONFIRMATION_LENGTH","MAX_NUMBER_OF_OUTPUTS","MIN_WITHDRAW_THRESHOLD","MAX_WITHDRAW_THRESHOLD","DEFAULT_WITHDRAW_THRESHOLD","REWARD_KEYS","WITHDRAW_KEYS","MINING_KEYS","Manage","reward","savePanelValue","submitPanel","keys","filter","includes","reduce","obj","MiningParamForm","RewardForm","WithdrawForm","AdminUserLayout","prefix","AdminUiManageLayout","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","FaqUiManage","edit","initialElements","objectKey","available","addedElement","createEmptyRow","element","choices","addRow","newElement","editElement","removeRow","elem","elemIndex","editRow","selectedElement","saveChanges","postData","uiPath","storeValue","storeExtraValue","width","find","contentKey","selectedTab","editorSelectedTab","onTabChange","generateMarkdownPreview","markdown","makeHtml","padding","float","adminUiManageFaq","DraggableTable","adminUiManageStatic","initialLinks","adminUiManageMenuLink","extraItems","adminUiManageFooterLink","adminUiManageIndexContent","adminUiManageNotification","Login","saveContent","redirect","queryParams","queryString","parse","search","next","signIn","setItem","App","basename","component","Error500","ErrorMaintenance","ErrorComing","Support","UserMainPage","UserWalletPage","UserConfigPage","AdminLogin","AdminDashboardInfo","AdminUser","AdminUserMain","AdminUserWallet","AdminManage","AdminUiManageFaq","AdminUiManageStatic","AdminUiManageMenuLink","AdminUiManageFooterLink","AdminUiManageIndexContent","AdminUiManageNotification","getApiInfo","getNodeData","getMessages","proxyNetwork","fullHeight","headersHeight","launchTime","isMining","peersCount","appVersion","previousFullHeaderId","miner","health","reason","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eefb0985.chunk.js","sourcesContent":["const BuildType = Object.freeze({\n    Server:   Symbol(\"server\"),\n    Proxy:  Symbol(\"proxy\")\n});\n\nconst ProductionType = BuildType.Proxy;\n\nexport class Production {\n    static IsServer = () => (ProductionType === BuildType.Server);\n    static IsProxy = () => (ProductionType === BuildType.Proxy);\n}\n","import React from 'react';\n\n\nconst withLayout = (Layout, layoutProps=null) => {\n    return (Component, componentProps=null) => {\n        return (props) => (\n            <Layout {...layoutProps} {...props}>\n                <Component {...componentProps} {...props}/>\n            </Layout>\n        )\n    }\n};\n\nexport default withLayout;\n","// a little function to help us with reordering the result\nexport const Reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\nexport const CompareObject = (a, b, exclude=[]) => {\n    if(typeof a === 'object'){\n        // Create arrays of property names\n        let aProps = Object.getOwnPropertyNames(a);\n        let bProps = Object.getOwnPropertyNames(b);\n        exclude.map(key => {\n            if(aProps.indexOf(key)>=0)\n                aProps.pop(aProps.indexOf(key));\n            if(bProps.indexOf(key)>=0)\n                bProps.pop(bProps.indexOf(key));\n            return null;\n        });\n\n        // If number of properties is different,\n        // objects are not equivalent\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (var i = 0; i < aProps.length; i++) {\n            var propName = aProps[i];\n\n            // If values of same property are not equal,\n            // objects are not equivalent\n            if (CompareObject(a[propName], b[propName]) === false) {\n                return false;\n            }\n        }\n\n        // If we made it this far, objects\n        // are considered equivalent\n        return true;\n    }else{\n        return a === b;\n    }\n};\n","import axios from 'axios';\nimport { TOKEN_KEY } from \"../build/constant\";\n// const WINDOWS_BASE_URL = (window._env_ === undefined ? null : window._env_.REACT_APP_BACKEND_URL);\n// const DEFAULT_BASE_URL = WINDOWS_BASE_URL === undefined ? \"https://api.ergopool.lan/api/\" : WINDOWS_BASE_URL;\nconst DEFAULT_BASE_URL = \"http://api.ergopool.lan/api/\"\nconst BASE_URL = (window.backend === undefined ?  DEFAULT_BASE_URL : window.backend);\nconst instance = axios.create({baseURL: BASE_URL});\n\ninstance.interceptors.request.use(config => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n        return {\n            ...config,\n            headers: {\n                ...config.headers,\n                Authorization: \"Token \" + token\n            }\n        }\n    }\n    return config;\n});\n\n\ninstance.interceptors.response.use(response => response, error => {\n    if (error.status === 401) {\n        console.log(\"Im here with status unauthorized\");\n        localStorage.removeItem(TOKEN_KEY);\n    }\n    return Promise.reject(error);\n});\n\nexport class ApiNetwork {\n\n    static info = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"info/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static dashboard = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static hashRate = (userId, queries) => {\n        return new Promise((resolve, reject) => {\n            try {\n                const getQueries = [];\n                if (queries.fromTimeStamp)\n                    getQueries.push(\"start=\" + queries.fromTimeStamp);\n                if (queries.toTimeStamp)\n                    getQueries.push(\"stop=\" + queries.toTimeStamp);\n                const getQueryStr = getQueries.join(\"&\");\n                instance.get(\"user/\" + userId + \"/hash_rate/?\" + getQueryStr).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static share = (userId, queries) => {\n        return new Promise((resolve, reject) => {\n            try {\n                const getQueries = [];\n                if (queries.fromTimeStamp)\n                    getQueries.push(\"start=\" + queries.fromTimeStamp);\n                if (queries.toTimeStamp)\n                    getQueries.push(\"stop=\" + queries.toTimeStamp);\n                const getQueryStr = getQueries.join(\"&\");\n                instance.get(\"user/\" + userId + \"/share/?\" + getQueryStr).then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static payout = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/payout/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static income = userId => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"user/\" + userId + \"/income/\").then(response => {\n                    resolve(response);\n                }).catch(error => {\n                    console.log(error);\n                    reject(error);\n                });\n            } catch (e) {\n                console.log(e);\n                reject(e);\n            }\n        })\n    };\n\n    static getLogin = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"login/\",).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static login = (username, password, recaptcha) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"login/\", {\n                    username: username,\n                    password: password,\n                    recaptcha_code: recaptcha\n                }).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static getConfig = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"conf/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static setConfig = configJson => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"conf/batch_create/\", configJson).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static getUsers = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"administrator/users/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        })\n    };\n\n    static getUiJson = (path) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"ui/\" + path + \"/\").then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static setUiJson = (path, elements) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"ui/\" + path + \"/\", {data: JSON.stringify(elements)}).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static getSupport = () => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.get(\"support/\",).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    static support = (name, email, subject, message, recaptcha) => {\n        return new Promise((resolve, reject) => {\n            try {\n                instance.post(\"support/\", {\n                    name: name,\n                    email: email,\n                    subject: subject,\n                    message: message,\n                    recaptcha_code: recaptcha\n                }).then(response => {\n                    resolve(response.data);\n                }).catch(e => {\n                    reject(e);\n                })\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n}\n\nexport default instance;\n","export const TOKEN_KEY = \"token\";\n","import * as actionTypes from '../actionTypes';\n\n\nexport const proxyInitialState = {\n    node: {\n        synced: false,\n        start: 0,\n        mining: false,\n        height: 0,\n        peers: 0,\n        version: '',\n        bestBlock: '',\n        pk: '',\n        status: 'RED',\n        message: \"\"\n    },\n    apiKey: '',\n    walletInitialized: false,\n    walletLocked: true,\n    wallet: {\n        status: '',\n        balance: 0,\n        address: [],\n    }\n};\n\nexport const reducer = (state = proxyInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_NODE_DATA:\n            return {\n                ...state,\n                node: action.payload\n            };\n        case actionTypes.STORE_NODE_API_KEY:\n            return {\n                ...state,\n                apiKey: action.payload.apiKey,\n                walletInitialized: action.payload.walletInitialized,\n                walletLocked: action.payload.walletLocked,\n            };\n        default:\n    }\n    return state\n};\n\nexport default reducer;\n","export const STORE_NODE_DATA = 'STORE_NODE_DATA';\nexport const STORE_NODE_API_KEY = 'STORE_NODE_API_KEY';\n\nexport const STORE_API_INFO = 'STORE_API_INFO';\nexport const STORE_API_USER_DASHBOARD = 'STORE_API_USER_DASHBOARD';\nexport const SET_USER_PK = \"SET_USER_PK\";\nexport const SET_USER_API_KEY = \"SET_USER_API_KEY\";\nexport const STORE_MENU_LINKS = \"STORE_MENU_LINKS\";\nexport const STORE_FOOTER = \"STORE_FOOTER\";\nexport const STORE_MESSAGES = \"STORE_MESSAGES\";\n","import * as actionTypes from '../actionTypes';\n\n\nexport const apiInitialState = {\n    userId: '',\n    token: '',\n    messages: [],\n    menu: [],\n    footer: {\n        extra: {},\n        items: []\n    },\n    info: {\n        hash_rate: {\n            network: 24843969,\n            pool: 1\n        },\n        miners: 0,\n        active_miners: 0,\n        price: {\n            btc: null,\n            usd: null\n        },\n        blocks_in_hour: 0.0\n    },\n    dashboard: {\n        round_valid_shares: 4454,\n        round_invalid_shares: 0,\n        timestamp: new Date(),\n        hash_rate: 70068,\n        user: {\n            round_valid_shares: 0,\n            round_invalid_shares: 0,\n            immature: 0,\n            mature: 0,\n            withdraw: 0,\n            hash_rate: 1\n        }\n    }\n};\n\nexport const reducer = (state = apiInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_API_INFO:\n            return {\n                ...state,\n                info: action.payload\n            };\n        case actionTypes.STORE_API_USER_DASHBOARD:\n            return {\n                ...state,\n                dashboard: action.payload\n            };\n        case actionTypes.SET_USER_PK:\n            return {\n                ...state,\n                userId: action.payload\n            };\n        case actionTypes.SET_USER_API_KEY:\n            return {\n                ...state,\n                token: action.payload\n            };\n        case actionTypes.STORE_MENU_LINKS:\n            return {\n                ...state,\n                menu: action.payload\n            };\n        case actionTypes.STORE_FOOTER:\n            return {\n                ...state,\n                footer: action.payload\n            };\n        case actionTypes.STORE_MESSAGES:\n            return {\n                ...state,\n                messages: action.payload\n            };\n        default:\n    }\n    return state\n};\n\nexport default reducer;\n","import * as actionTypes from '../actionTypes';\n\nexport const proxyInitialState = {\n    node: {\n        synced: false,\n        start: 0,\n        mining: false,\n        height: 0,\n        peers: 0,\n        version: '',\n        bestBlock: '',\n        pk: '',\n        status: 'GREEN',\n        message: null\n    },\n    apiKey: '',\n    walletInitialized: false,\n    walletLocked: true,\n    wallet: {\n        status: '',\n        balance: 0,\n        address: [],\n    }\n};\n\nexport const reducer = (state = proxyInitialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_NODE_DATA:\n            return {\n                ...state,\n                node: action.payload\n            };\n        case actionTypes.STORE_NODE_API_KEY:\n            return {\n                ...state,\n                apiKey: action.payload.apiKey,\n                walletInitialized: action.payload.walletInitialized,\n                walletLocked: action.payload.walletLocked,\n            };\n        default:\n    }\n    return state;\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport proxyReducer from './proxyReducer';\nimport apiReducer from './apiReducer';\nimport uiReducer from './uiReducer';\n\nexport const reducer = combineReducers({\n    proxy: proxyReducer,\n    api: apiReducer,\n    ui: uiReducer\n});\n\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(\n    thunk\n));\n\nexport {\n    store\n}\n","import { CompareObject } from \"../../utils\";\nimport * as actionTypes from '../actionTypes';\nimport { ApiNetwork } from '../../network/api';\nimport { store } from '../index'\n\nexport const loadApiInfoAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            ApiNetwork.info().then(response => {\n                setTimeout(getData, 10 * 60 * 1000);\n                dispatch({\n                    type: actionTypes.STORE_API_INFO,\n                    payload: {\n                        ...response.data\n                    }\n                });\n            }).catch(error => {\n                setTimeout(getData, 10 * 60 * 1000);\n            });\n        };\n        getData();\n    }\n};\n\nexport const loadApiDashboardAsync = (loadOnce = false) => {\n    return dispatch => {\n        const loadData = () => {\n            const userId = store.getState().api.userId;\n            if (userId) {\n                ApiNetwork.dashboard(userId).then(response => {\n                    if (!loadOnce) {\n                        setTimeout(() => loadData(), 10 * 60 * 1000);\n                    }\n                    const payload = {\n                        timestamp: new Date(response.data.timestamp.split(\" \").join(\"T\")),\n                        hash_rate: response.data.hash_rate,\n                        round_valid_shares: response.data.round_valid_shares,\n                        round_invalid_shares: response.data.round_invalid_shares,\n                        user: {...response.data.users[userId]}\n                    };\n                    dispatch({\n                        type: actionTypes.STORE_API_USER_DASHBOARD,\n                        payload: {...payload}\n                    });\n                }).catch(error => {\n                    if (!loadOnce) {\n                        setTimeout(() => loadData(), 10 * 60 * 1000);\n                    }\n                })\n            }\n        };\n        loadData();\n    }\n};\n\nexport const setUserPk = (userId) => {\n    return dispatch => {\n        dispatch({\n            type: actionTypes.SET_USER_PK,\n            payload: userId\n        });\n        loadApiDashboardAsync(true);\n    }\n};\n\nexport const loadMenu = () => {\n    return dispatch => {\n        ApiNetwork.getUiJson('MenuLink.json').then(data => {\n            if (CompareObject(store.getState().api.menu, data.items) === false) {\n                dispatch({\n                    type: actionTypes.STORE_MENU_LINKS,\n                    payload: data.items\n                });\n            }\n        });\n    }\n};\n\nexport const loadFooter = () => {\n    return dispatch => {\n        ApiNetwork.getUiJson('FooterLink.json').then(data => {\n            if (CompareObject(store.getState().api.footer, data) === false) {\n                dispatch({\n                    type: actionTypes.STORE_FOOTER,\n                    payload: data\n                });\n            }\n        });\n    }\n};\n\nexport const storeApiKey = (apiKey) => ({\n    type: actionTypes.SET_USER_API_KEY,\n    payload: apiKey\n});\n\nexport const storeMessage = messages => {\n    const state = store.getState();\n    const newMessages = [...state.api.messages];\n    messages.map(message => {\n        let msgIndex = -1;\n        newMessages.map((msg, index) => {\n            if (CompareObject(msg, message, ['display'])) {\n                msgIndex = index;\n                if (msg.display === \"yes\") {\n                    message.display = \"yes\";\n                }\n            }\n            return null;\n        });\n        if (msgIndex === -1) {\n            newMessages.push({...message});\n        } else {\n            newMessages[msgIndex] = {...message};\n        }\n        return null;\n    });\n    return {\n        type: actionTypes.STORE_MESSAGES,\n        payload: newMessages\n    };\n};\n\nexport const loadMessagesAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            ApiNetwork.getUiJson(\"Notification.json\").then(response => {\n                setTimeout(getData, 10 * 60 * 1000);\n                try {\n                    dispatch(storeMessage(response.items));\n                } catch (e) {\n\n                }\n            }).catch(error => {\n                setTimeout(getData, 10 * 60 * 1000);\n            });\n        };\n        getData();\n    }\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst menu = (props) => {\n    return (\n        <li>\n            <NavLink to={props.link} exact={true}>{props.title}</NavLink>\n        </li>\n    )\n};\n\nexport default menu;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadMenu } from \"../../../../store/actions/apiActions\";\nimport Menu from './menu/Menu';\nimport { TOKEN_KEY } from \"../../../../build/constant\";\n\nclass MenuBar extends React.Component {\n    state={\n        toggled: false\n    };\n\n    componentWillMount() {\n        this.props.loadMenu();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadMenu();\n    }\n    toggleClick = () => {\n        this.setState(state=>{\n            return {...state, toggled: !state.toggled};\n        })\n    };\n\n    render = () => {\n        const className = \"main-menu-bar \" + (this.state.toggled ? \"toggled\" : \"\");\n        return (\n            <div className={className}>\n                <div className=\"wrapper\">\n                    <div className=\"logo\"/>\n                    <button className=\"navigation-toggle\" onClick={this.toggleClick}>\n                        <i className=\"ep-icon-hamburger-menu\"/>\n                        <i className=\"ep-icon-close\"/>\n                    </button>\n                    <ul className=\"menu-bar\" style={this.props.style}>\n                        {this.props.links.map((link, index) => {\n                            if (link.superuser === \"yes\" && !localStorage.getItem(TOKEN_KEY)) return null;\n                            if (link.color) return <Menu key={link.link} link={link.link} title={link.title} style={{color: link.color}}/>;\n                            return <Menu key={link.link} link={link.link} title={link.title}/>;\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    links: state.api.menu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMenu: () => dispatch(loadMenu())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loadFooter } from \"../../../store/actions/apiActions\";\n\n\nclass Footer extends React.Component {\n    state = {\n        links: [],\n        extra: {}\n    };\n\n    componentWillMount() {\n        this.props.loadFooter();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadFooter();\n    }\n\n    renderLink = (link, index) => {\n        if (link.link.startsWith(\"http://\") || link.link.startsWith(\"https://\") || link.newTab === \"yes\") {\n            if (link.newTab === \"yes\") {\n                return <a target=\"_blank\" rel=\"noopener noreferrer\" href={link.link} className=\"link\" key={index}>{link.title}</a>\n            } else {\n                return <a href={link.link} className=\"link\" key={index}>{link.title}</a>\n            }\n        } else {\n            return <Link to={link.link} className=\"link\" key={index}>{link.title}</Link>\n        }\n    };\n\n    render = () => {\n        const columns = [\"column2\", \"column3\", \"column4\"];\n        return (\n            <div className=\"footer\" style={{backgroundColor: this.props.color}}>\n                <div className=\"wrapper\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"big-text\">{this.props.footer.extra.column1}</div>\n                        </div>\n                        {columns.map(column => (\n                            <div className=\"col\" key={column}>\n                                <div className=\"title\">{this.props.footer.extra[column]}</div>\n                                {this.props.footer.items.map((link, index) => {\n                                    return link.column.replace(\" \", \"\").toLowerCase() === column ? this.renderLink(link, index) : null;\n                                })}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"split\"/>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"logo\">Ergopool</div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"social-links\">\n                                <a className=\"social-link\" href=\"https://t.me/joinchat/AAAAAFkhFbEskHGp0p-JLg\"><i\n                                    className=\"ep-icon-social-telegram\"/></a>\n                                <a className=\"social-link\" href=\"https://twitter.com/ergopool\"><i\n                                    className=\"ep-icon-social-twitter\"/></a>\n                                <a className=\"social-link\" href=\"https://discord.gg/CzqeQjE\"><i\n                                    className=\"ep-icon-social-discord\"/></a>\n                                <a className=\"social-link\" href=\"https://github.com/ergopool-io\"><i\n                                    className=\"ep-icon-social-github\"/></a>\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"copyright\">\n                                ®2019-2020 Ergopool\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                        </div>\n                        <div className=\"clear\"/>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    footer: state.api.footer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadFooter: () => dispatch(loadFooter())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\n\n\nconst NavigationToggle = (props) => {\n    return (\n        <li className=\"toggle\">\n            <button onClick={props.click}>\n                <i className=\"ep-icon-hamburger-menu active-hide\"/>\n                <i className=\"ep-icon-left-arrow active-show\"/>\n            </button>\n        </li>\n    )\n};\n\nexport default NavigationToggle;\n","import React from 'react';\nimport MenuBar from '../main_layout/header/menu_bar/MenuBar';\nimport { NavLink } from \"react-router-dom\";\nimport Footer from '../main_layout/footer/Footer';\nimport NavigationToggle from \"./navigation_toggle/NavigationToggle\";\nimport { TOKEN_KEY } from \"../../build/constant\";\n\nclass AdminLayout extends React.Component {\n    state = {\n        navigationOpen: false,\n    };\n\n    componentWillMount() {\n        console.log(localStorage.getItem(TOKEN_KEY));\n        if (!localStorage.getItem(TOKEN_KEY)) {\n            this.props.history.push(\"/admin/login/?next=\" + this.props.match.url);\n        }\n    }\n\n    toggleNavigation = () => {\n        this.setState(prevState => {\n            return {navigationOpen: !prevState.navigationOpen}\n        });\n    };\n\n    logout = () => {\n        localStorage.removeItem(TOKEN_KEY);\n        this.props.history.push(\"/\");\n    };\n\n    getUrl = (suffix) => \"/admin/\" + suffix;\n\n    render = () => {\n        let layoutClasses = [\"user\"];\n        if (this.state.navigationOpen) {\n            layoutClasses.push(\"active\");\n        }\n        layoutClasses = layoutClasses.join(\" \");\n        return (\n            <div>\n                <div className={layoutClasses}>\n                    <MenuBar/>\n                    <ul className=\"navigation\">\n                        <NavigationToggle click={() => this.toggleNavigation()}/>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"system/\")}>\n                                <i className=\"ep-icon-admin-dashboard\"/>\n                                <span>Dashboard</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"user/\")}>\n                                <i className=\"ep-icon-admin-setting\"/>\n                                <span>Users</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"manage/\")}>\n                                <i className=\"ep-icon-admin-management\"/>\n                                <span>Management</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink activeClassName=\"active\" to={this.getUrl(\"ui-manage/\")}>\n                                <i className=\"ep-icon-admin-management-ui\"/>\n                                <span>UI management</span>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <button onClick={this.logout}>\n                                <i className=\"ep-icon-admin-logout\"/>\n                                <span>Logout</span>\n                            </button>\n                        </li>\n                    </ul>\n                    <div className=\"content\">\n                        {this.props.children}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n                <div className=\"footer\">\n                    <Footer/>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default AdminLayout;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport AdminLayout from '../AdminLayout';\nimport withLayout from '../../../hoc/with_layout/withLayout';\n\nclass AdminSystemLayout extends React.Component {\n\n    getUrl = (suffix) => \"/admin/system/\" + suffix;\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <ul className=\"tab-bar-flex\">\n                    <li>\n                        <NavLink to={this.getUrl(\"\")} exact>System Info</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"stat\")} exact>Statistics</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"block\")} exact>Blocks</NavLink>\n                    </li>\n                </ul>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(AdminSystemLayout);\n","import React from 'react';\n\n\nconst panel = (props) => {\n    return (\n        <div className={\"panel\" + (props.className ? \" \" + props.className : '')}>\n            <div className=\"panel-content\">\n                {props.children}\n                <div className=\"clear\"/>\n            </div>\n        </div>\n    )\n};\n\nexport default panel;\n","import React from 'react';\n\n\nconst connector = (props) => {\n    const rotate = Math.atan((props.to - props.from));\n    const classes = (props.from === 0 && props.to === 0) ? \"connector red\" : \"connector\";\n    const styles = {\n        transform: \"rotate(\" + (rotate / Math.asin(1) * 90) + \"deg)\",\n    };\n    if (props.from !== props.to){\n        styles['width'] = (1/Math.sin(rotate) * 100 * (props.to - props.from)) + \"%\";\n    }\n    return (\n        <div className={classes} style={styles}>\n\n        </div>\n    )\n};\n\nexport default connector;\n","import React from 'react';\nimport Panel from '../../../../components/panel/Panel';\nimport Connector from './Connector';\n\nconst rowsNodes = [1, 2, 1, 1, 5, 2, 3, 1, 1, 1];\nconst connectors = [\n    [[1]],\n    [],\n    [],\n    [[1, 2, 3, 4]],\n    [[], [1]],\n    [[1], [2]],\n    [],\n    [],\n    [],\n    []\n];\n\nconst MiningTree = (props) => {\n    // const elements = Array(10).fill().map((_, i) => i);\n    return (\n        <Panel>\n            <div className=\"circle-view\">\n                {rowsNodes.map((cnt, index) => (\n                    <div className=\"row\">\n                        {Array(cnt).fill().map((_, col_index) => (\n                            <div className=\"holder\">\n                                <div className=\"container\">\n                                    <div className=\"circle\">\n                                        13 MH/s {col_index}\n                                    </div>\n                                </div>\n                                {(index === 9 || col_index > 0) ? null : <Connector from={0} to={0}/>}\n                                {\n                                    connectors[index].length > col_index ?\n                                        connectors[index][col_index].map(connect_to => (\n                                            <Connector from={col_index} to={connect_to}/>)\n                                        ) : null\n                                }\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </Panel>\n    )\n};\n\nexport default MiningTree;\n","import moment from \"moment\";\nimport React from 'react';\n\n\nconst NotificationRow = (props) => {\n    const time = new moment(props.date).format(\"HH:mm:ss\");\n    return (\n        <div className=\"notification-row\">\n            <div className=\"notification-left\">\n                {time}\n                <div className=\"timing-circle\">\n                </div>\n            </div>\n            <div className=\"notification-right\">\n                {props.content}\n            </div>\n        </div>\n    )\n};\n\nexport default NotificationRow;\n","import React from 'react';\nimport Panel from \"../../../../components/panel/Panel\";\nimport NotificationRow from './notification-row/NotificationRow'\n\nconst notifications = [\n    {\n        id: 1,\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n        color: \"red\",\n        date: new Date(),\n        tags: [\"tag1\", \"tag2\"]\n    },\n    {\n        id: 2,\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n        color: \"yellow\",\n        date: new Date(),\n        tags: [\"tag3\", \"tag2\"]\n    },\n    {\n        id: 3,\n        content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n        color: \"blue\",\n        date: new Date(),\n        tags: [\"webserver\"]\n    }\n];\n\nconst notificationCenter = (props) => {\n    return (\n        <Panel>\n            <div>\n                {notifications.map(notification => <NotificationRow {...notification}/>)}\n            </div>\n        </Panel>\n    )\n};\n\nexport default notificationCenter;\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport AdminSystemLayout from '../../../layouts/admin_layout/admin_system_layout/AdminSystemLayout'\nimport MiningTree from \"./mining-tree/MiningTree\";\nimport NotificationCenter from './notification-center/NotificationCenter';\n\nconst adminDashboard = (props) => {\n    return (\n        <div>\n            <MiningTree/>\n            <NotificationCenter/>\n        </div>\n    )\n};\n\nexport default withLayout(AdminSystemLayout)(adminDashboard);\n","import React from 'react';\n\n\nconst ErrorLayout = (props) => {\n    return (\n        <div className=\"error\" style={{background: props.color}}>\n            <div className=\"socials\">\n                <div className=\"socialBar\"/>\n                <a href=\"https://t.me/joinchat/AAAAAFkhFbEskHGp0p-JLg\" className=\"social\"><i className=\"ep-icon-social-telegram\"/> </a>\n                <a href=\"https://twitter.com/ergopool\" className=\"social\"><i className=\"ep-icon-social-twitter\"/> </a>\n                <a href=\"https://discord.gg/CzqeQjE\" className=\"social\"><i className=\"ep-icon-social-discord\"/> </a>\n                <a href=\"https://github.com/ergopool-io\" className=\"social\"><i className=\"ep-icon-social-github\"/> </a>\n            </div>\n            <div className=\"contents\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default ErrorLayout;\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\nimport { Link } from \"react-router-dom\";\n\nconst error404 = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>404</h1>\n                <h2>Something's missing.</h2>\n                <div>Selected page not found.</div>\n                <Link to=\"/\">Back to home</Link>\n            </div>\n            <div className=\"error-image error_404\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(error404);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\nimport { Link } from \"react-router-dom\";\n\nconst error500 = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>500</h1>\n                <h2>Oooops... Something wents wrong</h2>\n                <div>Sorry for this inconvenience, Our team is actively working to fix issue</div>\n                <Link to=\"/\">Back to home</Link>\n            </div>\n            <div className=\"error-image error_500\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout, {\n    color: \"#ffdede\"\n})(error500);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\n\nconst errorMaintenance = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>&nbsp;</h1>\n                <h2>Under maintenance...</h2>\n                <div>Website is currently undergoing scheduled maintenance. we should be back shortly.</div>\n            </div>\n            <div className=\"error-image error_maintenance\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(errorMaintenance);\n","import React from 'react';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport ErrorLayout from \"../../../layouts/error_layout/ErrorLayout\";\n\nconst errorComing = (props) => {\n    return (\n        <div>\n            <div>\n                <h1>&nbsp;</h1>\n                <h2>Comming soon.</h2>\n                <div>Stay tuned and get the latest updates and news from our social media.</div>\n            </div>\n            <div className=\"error-image error_coming\"/>\n        </div>\n    )\n};\n\nexport default withLayout(ErrorLayout)(errorComing);\n","import React from 'react';\nimport { Markdown } from \"react-showdown\";\nimport { storeMessage } from \"../../store/actions/apiActions\";\nimport { connect } from \"react-redux\";\n\n\nclass Popup extends React.Component {\n\n    getCurrentMessages = () => {\n        let resultMessages = [];\n        this.props.messages.map((message, index) => {\n            if (message.display !== \"yes\") {\n                resultMessages.push(message);\n            }\n            return null\n        });\n        return resultMessages;\n    };\n\n    closeAllMessages = () => {\n        const newMessages = this.props.messages.map(message => {\n            return {...message, display: \"yes\"};\n        });\n        this.props.storeMessage(newMessages);\n    };\n\n    nextMessage = (message) => {\n        this.props.storeMessage([{...message, display: \"yes\"}])\n    };\n\n    render = () => {\n        const messages = this.getCurrentMessages();\n        if (messages.length === 0)\n            return null;\n        const message = messages[0];\n        const className = \"popup popup-\" + message.type;\n        return (\n            <div className=\"popup-container\">\n                <div className={className}>\n                    <div className=\"action-row\">\n                        <button className=\"close-btn\" onClick={this.closeAllMessages}>\n                            <i className=\"ep-icon-close\"/>\n                        </button>\n                    </div>\n                    <div className=\"popup-content\">\n                        <h1>{message.title}</h1>\n                        <Markdown markup={message.content}/>\n                    </div>\n                    <div className=\"action-row-bottom\">\n                        <button className=\"action-btn\" onClick={() => this.nextMessage(message)}>\n                            {messages.length > 1 ? \"Next\" : \"Close\"}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    messages: state.api.messages,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    storeMessage: (message) => dispatch(storeMessage(message))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { setUserPk } from \"../../../../store/actions/apiActions\";\n\n\nclass Search extends React.Component {\n    state = {\n        user: '',\n    };\n    handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.navigate();\n        }\n    };\n\n    navigate = () => {\n        this.props.setUserPk(this.state.user);\n        this.props.history.push(\"/user/\" + this.state.user + \"/\")\n    };\n\n    render = () => {\n        return (\n            <div className=\"search wrapper\">\n                <i\n                    className=\"ep-icon-search\"\n                    onClick={this.navigate}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search your address\"\n                    value={this.state.user}\n                    onKeyDown={this.handleKeyDown}\n                    onChange={(event) => this.setState({user: event.target.value})}\n                />\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.dashboard\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: () => dispatch(setUserPk)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Search));\n","import React from 'react';\nimport MenuBar from './menu_bar/MenuBar';\nimport Search from './search/Search';\n\nfunction header(props) {\n    return (\n        <div className=\"header\">\n            <MenuBar/>\n            <div className=\"wrapper\">\n                <div className=\"clear\"/>\n                <div className=\"title\">\n                    {props.title}\n                </div>\n                {props.hide_search ? null : <Search/>}\n            </div>\n        </div>\n    )\n}\n\nexport default header;\n","import React from 'react';\n\n\nconst Style = (props) => {\n    return (\n        <div className=\"style\">\n            <div className=\"wrapper\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default Style;\n","import React from 'react';\nimport Footer from './footer/Footer';\nimport Header from './header/Header';\nimport Style from './style/Style';\n\n\nconst mainLayout = (props) => {\n    const classes = \"main \" + (props.customClass ? props.customClass : '');\n    return (\n        <div className={classes}>\n            {process.env.REACT_APP_BACKEND_URL2}\n            <Header hide_search={props.hide_search} title={props.title}/>\n            <Style>\n                {props.children}\n            </Style>\n            <Footer/>\n        </div>\n    )\n};\n\nexport default mainLayout;\n","const suffix = ['', 'K', 'M', 'G', 'T', 'E', 'P'];\n\nexport const hashRate = value => {\n    if (value === undefined)\n        return '0 ';\n    let index = 0;\n    while (value > 1024) {\n        index += 1;\n        value /= 1024;\n    }\n    return value.toFixed(2) + ' ' + suffix[index];\n};\n\n\nexport const ergo = value => {\n    const price = value / 1e9;\n    const pieces = parseFloat(price).toFixed(6).split('');\n    let ii = pieces.length - 10;\n    while ((ii-=3) > 0) {\n        pieces.splice(ii, 0, ',')\n    }\n    return pieces.join('')\n};\n\nexport const username = value => {\n    return (value.length < 12) ? value : value.substr(0, 12) + '...';\n};\n","import React from 'react';\n\nclass Earning extends React.Component {\n    state = {\n        hashrate: \"\"\n    };\n\n    blockInDay = () => {\n        let hashrate = 0\n        if(this.state.hashrate)\n            hashrate = this.state.hashrate * 1024 * 1024;\n        const networkHashRate = this.props.network + hashrate;\n        if (networkHashRate === 0) return 0;\n        return hashrate / networkHashRate * 24 * 30;\n    };\n\n    earning = () => {\n        const res = this.blockInDay() * 65;\n        if (res > 0)\n            return res.toFixed(4);\n        return 0;\n    };\n\n    collateral = () => {\n        const res = (Math.ceil(this.blockInDay()) + 2) * 65 + 0.001;\n        return res\n    };\n\n\n    render() {\n        return (\n            <div className=\"earning\">\n                <label>\n                    Autolykos Hashrate(MH/s)\n                    <input value={this.state.hashrate}\n                           onChange={(event) => this.setState({hashrate: event.target.value})}/>\n                </label>\n                <span> * 24H = {this.earning()} Erg</span>\n                <h2>Required collateral: {this.collateral()} Erg</h2>\n                <h1>Daily earning: {this.earning()} Erg</h1>\n            </div>\n        )\n    };\n}\n\nexport default Earning;\n","import React from 'react';\nimport * as formatter from '../../../formatter';\n\nclass HashRate extends React.Component {\n    render() {\n        return (\n            <div className={\"hashrate\"}>\n                <div>\n                    <h2>Network Hashrate</h2>\n                    <h4>(last 30 minutes)</h4>\n                    <h2>{formatter.hashRate(this.props.networkHashRate)}H/s</h2>\n                </div>\n                <div>\n                    <h2>Pool Hashrate</h2>\n                    <h4>(last 30 minutes)</h4>\n                    <h2>{formatter.hashRate(this.props.poolHashRate)}H/s</h2>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default HashRate;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Popup from \"../../components/popup/Popup\";\nimport Search from \"../../layouts/main_layout/header/search/Search\";\nimport MainLayout from \"../../layouts/main_layout/MainLayout\"\nimport Panel from '../../components/panel/Panel';\nimport { Link } from 'react-router-dom';\nimport * as formatter from '../../formatter';\nimport { ApiNetwork } from \"../../network/api\";\nimport { CompareObject } from \"../../utils\";\nimport Earning from \"./earning/Earning\";\nimport HashRate from \"./hash_rate/HashRate\";\n\nconst slider = (props) => {\n    return (\n        <div className=\"slider\">\n            <div className=\"left\">\n                <h1>{props.sliderHeader}</h1>\n                <h2>{props.sliderSubTitle}</h2>\n                <Link className=\"btn blue\" to={props.sliderLink}>{props.sliderLinkTitle}</Link>\n            </div>\n            <div className=\"image\"/>\n            <div className=\"clear\"/>\n        </div>\n    )\n};\n\nclass IndexContent extends React.Component {\n    state = {\n        priceType: \"usd\",\n        features: [],\n        index: {\n            sliderHeader: \"The Mining Hub for Self-Sovereign Ergo Miners!\",\n            sliderSubTitle: \"Ergopool is an impotent semi-decentralized mining pool built to empower the most decentralized blockchain ever existed.\",\n            sliderLink: \"/how/\",\n            sliderLinkTitle: \"Start mining\",\n            firstBoxTitle: \"\",\n            firstBoxContent: \"\",\n        }\n    };\n\n    changePriceType = () => {\n        this.setState(state => {\n            let priceType = \"usd\";\n            if (state.priceType === \"usd\")\n                priceType = \"btc\";\n            return {...state, priceType: priceType};\n        });\n    };\n\n    priceIcon = () => {\n        if (this.state.priceType === \"usd\") return \"$\";\n        return \"btc\";\n    };\n\n    render = () => {\n        return (\n            <div className=\"main-content\">\n                <Popup/>\n                <h1>{this.props.index.firstBoxTitle}</h1>\n                <h3>{this.props.index.firstBoxContent}</h3>\n                <Search/>\n                <div className=\"cols\">\n                    <div className=\"col\">\n                        <h1>Hash Rate </h1>\n                        <h4>(last 30 minutes)</h4>\n                        <h3>{formatter.hashRate(this.props.info.hash_rate.pool)}H/s</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Active Miners</h1>\n                        <h3>{this.props.info.active_miners}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Miners</h1>\n                        <h3>{this.props.info.miners}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Blocks/h</h1>\n                        <h3>{this.props.info.blocks_in_hour}</h3>\n                    </div>\n                    <div className=\"col\">\n                        <h1>Price <i className=\"ep-icon-exchange\" onClick={this.changePriceType}/></h1>\n                        <h3>{this.props.info.price[this.state.priceType]} {this.priceIcon()}</h3>\n                    </div>\n                </div>\n                <div className=\"circle\">\n                    <i className=\"ep-icon-star\"/>\n                </div>\n                <h1>Features</h1>\n                <div className=\"features\">\n                    {this.props.features.map((item, index) => (\n                        <div className=\"panel-container\" key={index}>\n                            <div className=\"panel-wrapper\">\n                                <Panel>\n                                    {item.title}\n                                </Panel>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <h1 id=\"calculator\">Calculate your Earning</h1>\n                <Panel className={\"panel-earning\"}>\n                    <HashRate networkHashRate={this.props.info.hash_rate.network}\n                              poolHashRate={this.props.info.hash_rate.pool}/>\n                    <Earning {...this.props.info.hash_rate}/>\n                </Panel>\n            </div>\n        )\n    };\n}\n\nclass Index extends React.Component {\n    state = {\n        features: [],\n        index: {\n            sliderHeader: \"\",\n            sliderSubTitle: \"\",\n            sliderLink: \"\",\n            sliderLinkTitle: \"\",\n            firstBoxTitle: \"\",\n            firstBoxContent: \"\",\n        }\n    };\n    getData = () => {\n        ApiNetwork.getUiJson(\"Index.json\").then(index => {\n            if (CompareObject(index.items, this.state.features) === false || CompareObject(index.extra, this.state.index) === false) {\n                this.setState({\n                    features: index.items,\n                    index: index.extra\n                });\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getData();\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    render = () => {\n        return (\n            <MainLayout hide_search={true} customClass=\"index\" title={slider(this.state.index)} {...this.props}>\n                <IndexContent features={this.state.features} index={this.state.index} {...this.props}/>\n            </MainLayout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.info,\n});\n\nexport default connect(mapStateToProps)(Index);\n","import React from 'react';\nimport { Markdown } from 'react-showdown';\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\nimport { ApiNetwork } from \"../../../network/api\";\nimport { CompareObject } from \"../../../utils\";\nimport Error404 from '../../errors/error404/Error404';\n\nclass StaticPage extends React.Component {\n    state = {\n        pages: [],\n        loaded: false\n    };\n\n    getData = () => {\n        ApiNetwork.getUiJson(\"Page.json\").then(pages=>{\n            if(CompareObject(pages.items, this.state.pages) === false) {\n                this.setState({pages: pages.items, loaded: true});\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getData();\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    render = () => {\n        let content = null;\n        let title = null;\n        console.log(this.state);\n        this.state.pages.map(page => {\n            if(this.props.location.pathname === page.urlKey){\n                content = page.content;\n                title = page.title;\n            }\n            return null;\n        });\n        if(content === null && this.state.loaded){\n            return <Error404/>\n        }\n        const Component = withLayout(MainLayout, {title: title})((props) => {\n            return <Markdown markup={content} />\n        });\n        return <div className=\"static-page\"><Component/></div>\n    };\n}\n\nexport default StaticPage;\n","import React from 'react';\n\nconst address = (props) => {\n    return (\n        <div className=\"address-container\">\n            <div className=\"address\" title={props.userId}>\n                {props.userId}\n            </div>\n            {props.children}\n        </div>\n    )\n};\n\nexport default address;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadMenu } from \"../../../../store/actions/apiActions\";\nimport Menu from './menu/Menu';\nimport { TOKEN_KEY } from \"../../../../build/constant\";\n\nclass MenuBar extends React.Component {\n    state = {\n        toggled: false\n    };\n\n    componentWillMount() {\n        this.props.loadMenu();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.loadMenu();\n    }\n\n    toggleClick = () => {\n        this.setState(state => {\n            return {...state, toggled: !state.toggled};\n        })\n    };\n\n    render = () => {\n        const className = \"navigation-menu \" + (this.state.toggled ? \"toggled\" : \"\");\n        return (\n            <li className={className}>\n                <button className=\"title\" onClick={this.toggleClick}>\n                    Quick Access\n                </button>\n                <ul className=\"menu-bar-navigation\" style={this.props.style}>\n                    {this.props.links.map((link, index) => {\n                        if (link.superuser === \"yes\" && !localStorage.getItem(TOKEN_KEY)) return null;\n                        if (link.color) return <Menu key={link.link} link={link.link} title={link.title}\n                                                     style={{color: link.color}}/>;\n                        return <Menu key={link.link} link={link.link} title={link.title}/>;\n                    })}\n                </ul>\n            </li>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    links: state.api.menu,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMenu: () => dispatch(loadMenu())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);\n","import React from 'react';\n\n\nconst modal = (props) => {\n    return (\n        <div>\n            {props.display ? (\n                <div className=\"modal\">\n                    <div className=\"modal-wrapper\">\n                        <div className=\"modal-back\"/>\n                        <div className=\"modal-content\">\n                            {props.children}\n                            <div className=\"action-row\">\n                                <div className=\"btn-holder\">\n                                    <button className=\"btn gray\" onClick={props.onClose}>Cancel</button>\n                                </div>\n                                <div className=\"btn-holder\">\n                                    <button className=\"btn blue\" onClick={props.onSuccess}>{props.successTitle}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n};\n\nexport default modal;\n","import axios from 'axios';\nimport { store } from '../store'\n\nconst instance = axios.create({baseURL: \"/\"});\n\ninstance.interceptors.request.use(config => {\n    const apiKey = store.getState().proxy.apiKey;\n    if (apiKey) {\n        config.headers = {\"api_key\": apiKey};\n    }\n    return config;\n}, error => {\n\n});\n\nclass ProxyNetworking {\n    static info = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.get(\"info\").then(response => {\n                callback(response);\n            }).catch(error => {\n                console.log(error);\n                errorCallback(error);\n            });\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static walletStatus = (apiKey = '', callback, errorCallback = error => {\n    }) => {\n        try {\n            const headers = {\n                'api_key': apiKey,\n            };\n            instance.get('wallet/status', {headers: headers}).then(response => {\n                callback(response)\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static walletLock = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.get('wallet/lock').then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            });\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static walletUnlock = (password, callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.post('wallet/unlock', {pass: password}).then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            });\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static proxyReload = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.post(\"proxy/config/reload\").then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    };\n\n    static proxyResetStatus = (callback, errorCallback = error => {\n    }) => {\n        try {\n            instance.post(\"proxy/status/reset\").then(response => {\n                callback(response);\n            }).catch(error => {\n                errorCallback(error);\n            })\n        } catch (e) {\n            console.log(e);\n            errorCallback(e);\n        }\n    }\n}\n\nexport default ProxyNetworking;\n","import React from 'react';\n\n\nconst NavigationToggle = (props) => {\n    return (\n        <li className=\"toggle\">\n            <button onClick={props.click}>\n                <i className=\"ep-icon-hamburger-menu active-hide\"/>\n                <i className=\"ep-icon-left-arrow active-show\"/>\n            </button>\n        </li>\n    )\n};\n\nexport default NavigationToggle;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Modal from \"../../../components/modal/Modal\";\nimport proxyNetworking from \"../../../network/proxy\";\nimport NavigationToggle from \"../navigation_toggle/NavigationToggle\";\nimport { storeApiKey } from \"../../../store/actions/proxyActions\";\n\n\nclass NavigationHeader extends React.Component {\n    state = {\n        authModal: false,\n        unlockModal: false,\n        initialModal: false,\n        apiKey: '',\n        unlockPassword: ''\n    };\n\n    openAuthPanel = () => {\n        this.setState({authModal: true});\n    };\n\n    closeAuthPanel = () => {\n        this.setState({authModal: false, apiKey: ''});\n    };\n\n    openUnlockPanel = () => {\n        this.setState({unlockModal: true});\n    };\n\n    closeUnlockPanel = () => {\n        this.setState({unlockModal: false});\n    };\n\n    setApiKey = () => {\n        proxyNetworking.walletStatus(this.state.apiKey, response => {\n            console.log(response);\n            this.props.storeApiKey(this.state.apiKey, response.data.isInitialized, !response.data.isUnlocked);\n            this.setState({authModal: false, apiKey: ''});\n        }, error => {\n            alert(\"invalid Api key\");\n        });\n    };\n\n    lockWallet = () => {\n        proxyNetworking.walletLock(response => {\n            this.props.storeApiKey(this.props.apiKey, this.props.walletInitialized, true);\n        }, error => {\n\n        })\n    };\n\n    setUnlockPassword = () => {\n        proxyNetworking.walletUnlock(this.state.unlockPassword, response => {\n            this.props.storeApiKey(this.props.apiKey, this.props.walletInitialized, false);\n            this.setState({unlockModal: false, unlockPassword: ''});\n        }, error => {\n\n        });\n    };\n\n    reloadProxyConfig = () => {\n        proxyNetworking.proxyReload(response => {\n        });\n    };\n\n    render() {\n        let statusClassName = \"pr-\";\n        if (this.props.node.status === \"GREEN\") statusClassName += \"success\";\n        if (this.props.node.status === \"RED\") statusClassName += \"error\";\n        if (this.props.node.status === \"YELLOW\") statusClassName += \"warning\";\n        return (\n            <div>\n                <Modal\n                    display={this.state.authModal}\n                    onClose={this.closeAuthPanel}\n                    onSuccess={this.setApiKey}\n                    successTitle=\"Set Api key\"\n                >\n                    <h3>Set Api key</h3>\n                    <p>Authorization</p>\n                    <p>Set api key to access node requests</p>\n                    <input value={this.state.apiKey}\n                           onChange={(event) => this.setState({apiKey: event.target.value})}/>\n                </Modal>\n                <Modal\n                    display={this.state.unlockModal}\n                    onClose={this.closeUnlockPanel}\n                    onSuccess={this.setUnlockPassword}\n                    successTitle=\"Unlock Wallet\">\n                    <p>Enter wallet password</p>\n                    <input value={this.state.unlockPassword}\n                           type=\"password\"\n                           onChange={(event) => this.setState({unlockPassword: event.target.value})}/>\n                </Modal>\n                <div className={\"panel-header \" + statusClassName}>\n                    <ul className=\"navigation\">\n                        <NavigationToggle click={this.props.toggleNavigation}/>\n                    </ul>\n                    <div className=\"content-wrapper\">\n                        <div className=\"logo\">\n                            <div className=\"head-title\">ErgoPool</div>\n                            <div className=\"head-sub-title\">Proxy Interface</div>\n                        </div>\n                        <div className=\"action-button\">\n                            <div className=\"floater\"/>\n                            {this.props.apiKey ? (\n                                <React.Fragment>\n                                    <button className=\"btn blue\" onClick={this.openAuthPanel}>Update Api key</button>\n                                    {!this.props.walletInitialized ? (\n                                        <button className=\"btn bordered\" onClick={this.openAuthPanel}>Initialize\n                                            Wallet</button>\n                                    ) : this.props.walletLocked ?\n                                        <button className=\"btn bordered\" onClick={this.openUnlockPanel}>UnLock\n                                            Wallet</button> :\n                                        <button className=\"btn bordered\" onClick={this.lockWallet}>lock Wallet</button>\n                                    }\n                                </React.Fragment>\n                            ) : <button className=\"btn blue set-api-key\" onClick={this.openAuthPanel}>Set Api key</button>\n                            }\n                            <button className=\"btn bordered icon-button\" onClick={this.reloadProxyConfig}\n                                    title=\"Reload pool configuration\"><i className=\"ep-icon-refresh\"/></button>\n                        </div>\n                        <div className=\"proxy-status\">\n                            {this.props.node.message ? (\n                                <React.Fragment>\n                                    <i className=\"ep-icon-information\"/>\n                                    <div className=\"pr-info\">\n                                        {this.props.node.message}\n                                    </div>\n                                </React.Fragment>) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => {\n    return {\n        apiKey: state.proxy.apiKey,\n        walletInitialized: state.proxy.walletInitialized,\n        walletLocked: state.proxy.walletLocked,\n        node: state.proxy.node\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        storeApiKey: (apiKey, walletInitialized, walletLocked) => dispatch(storeApiKey(apiKey, walletInitialized, walletLocked)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationHeader);\n","import * as actionTypes from '../actionTypes';\nimport proxyNetwork from '../../network/proxy';\n\nexport const loadNodeDataAsync = () => {\n    return dispatch => {\n        const getData = () => {\n            proxyNetwork.info(\n                response => {\n                    const data = response.data;\n                    setTimeout(getData, 5000);\n                    dispatch({\n                        type: actionTypes.STORE_NODE_DATA,\n                        payload: {\n                            synced: data.fullHeight === data.headersHeight,\n                            start: data.launchTime,\n                            mining: data.isMining,\n                            height: data.fullHeight,\n                            peers: data.peersCount,\n                            version: data.appVersion,\n                            bestBlock: data.previousFullHeaderId,\n                            pk: data.proxy.miner.pk,\n                            status: data.proxy.status.health,\n                            message: data.proxy.status.reason\n                        }\n                    });\n                }, error => {\n                    setTimeout(getData, 10000);\n                }\n            );\n        };\n        getData();\n    }\n};\n\n\nexport const storeApiKey = (apiKey, walletInitialized, walletLocked) => ({\n    type: actionTypes.STORE_NODE_API_KEY, payload: {\n        apiKey: apiKey,\n        walletInitialized: walletInitialized,\n        walletLocked: walletLocked\n    }\n});\n","import React from 'react';\nimport { Production } from \"../../build/production\";\nimport Address from \"./address/Address\";\nimport MenuBar from '../main_layout/header/menu_bar/MenuBar';\nimport MenuBarNavigation from '../main_layout/header/menu_bar/MenuBarNavigation';\nimport { NavLink } from \"react-router-dom\";\nimport Footer from '../main_layout/footer/Footer';\nimport NavigationHeader from \"./navigation_header/NavigationHeader\";\nimport NavigationToggle from \"./navigation_toggle/NavigationToggle\";\nimport { connect } from \"react-redux\";\nimport { setUserPk } from \"../../store/actions/apiActions\";\n\nclass UserLayout extends React.Component {\n    state = {\n        navigationOpen: true,\n    };\n\n    updateUserId = () => {\n        if (Production.IsProxy()) {\n            // const urlUserId=this.props.match.params.userId;\n            // const stateUserId = this.props.userId;\n        } else {\n            const urlUserId = this.props.match.params.userId;\n            const stateUserId = this.props.userId;\n            if (urlUserId !== stateUserId) {\n                this.props.setUserPk(urlUserId);\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.updateUserId();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.updateUserId();\n    }\n\n    toggleNavigation = () => {\n        this.setState(prevState => {\n            return {navigationOpen: !prevState.navigationOpen}\n        });\n    };\n\n    getUrl = (suffix) => Production.IsServer() ? \"/user/\" + this.props.match.params.userId + suffix : suffix;\n\n    render = () => {\n        let layoutClasses = Production.IsServer() ? [\"user\"] : [\"proxy\", \"user\"];\n        if (this.state.navigationOpen) {\n            layoutClasses.push(\"active\");\n        }\n        layoutClasses = layoutClasses.join(\" \");\n        return (\n            <div>\n                <div className={layoutClasses}>\n                    <button onClick={() => this.toggleNavigation()} className=\"navigation-toggle-user\">\n                        <i className=\"ep-icon-hamburger-menu active-hide\"/>\n                    </button>\n                    {Production.IsServer() ? <MenuBar/> : <NavigationHeader toggleNavigation={this.toggleNavigation}/>}\n                    <ul className=\"navigation\">\n                        {Production.IsServer() ? <NavigationToggle click={() => this.toggleNavigation()}/> : null}\n                        <li><NavLink activeClassName=\"active\" to={this.getUrl(\"/\")} exact>\n                            <i className=\"ep-icon-user-dashboard\"/><span>Dashboard</span>\n                        </NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to={this.getUrl(\"/wallet/\")}>\n                            <i className=\"ep-icon-user-wallet\"/><span>Wallet</span>\n                        </NavLink></li>\n                        {/*<li><NavLink activeClassName=\"active\" to={this.getUrl(\"/config/\")}>*/}\n                        {/*    <i className=\"ep-icon-user-setting\"/><span>Settings</span>*/}\n                        {/*</NavLink></li>*/}\n                        {Production.IsProxy() ? (\n                            <React.Fragment>\n                                <hr/>\n                                <li>\n                                    <a href=\"/swagger\" target=\"_blank\">\n                                        <i className=\"ep-icon-useralt-swagger\"/>\n                                        <span>Swagger</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://explorer.ergoplatform.com\" target=\"_blank\">\n                                        <i className=\"ep-icon-useralt-ergo-explorer\"/>\n                                        <span>Explorer</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://ergoplatform.org\" target=\"_blank\">\n                                        <i className=\"ep-icon-useralt-ergo1\"/>\n                                        <span>ErgoPlatform</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"http://ergopool.io\" target=\"_blank\">\n                                        <i className=\"ep-icon-logo-fill\"/>\n                                        <span>ErgoPool</span>\n                                    </a>\n                                </li>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <li><NavLink activeClassName=\"active\" to=\"/support/\">\n                                    <i className=\"ep-icon-user-help-desk\"/><span>Support</span>\n                                </NavLink></li>\n                                <MenuBarNavigation/>\n                            </React.Fragment>\n                        )}\n                    </ul>\n                    <div className=\"content\">\n                        {Production.IsServer() ? (\n                            <React.Fragment>\n                                Welcome,\n                                <Address userId={this.props.match.params.userId}/>\n                            </React.Fragment>\n                        ) : null}\n                        {this.props.children}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n                <Footer/>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    dashboard: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: (userId) => dispatch(setUserPk(userId))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);\n","import React from 'react';\n\nclass ChartFilter extends React.Component {\n    state = {\n        visible: false\n    };\n\n    changeState = () => {\n        this.setState(prevState => {\n            return {visible: !prevState.visible}\n        })\n    };\n\n    apply = () => {\n        this.props.onApply();\n        this.changeState();\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul className={\"chart-filter \" + (this.state.visible ? \"active\" : \"\")}>\n                    <div onClick={this.changeState}>\n                        Custom Time period <i className=\"ep-icon-filter-chart\"/>\n                    </div>\n                    <div className=\"chart-filter-content\">\n                        {this.props.children}\n                        <div className=\"action-row\">\n                            <div className=\"btn-holder\">\n                                <button className=\"btn gray\" onClick={this.changeState}>Cancel</button>\n                            </div>\n                            <div className=\"btn-holder\">\n                                <button className=\"btn blue\" onClick={this.apply}>Apply</button>\n                            </div>\n                        </div>\n                    </div>\n                </ul>\n                <ul className=\"chart-filter-series\">\n                    {\n                        this.props.series.map(\n                            value => (\n                                <li key={value.key}>\n                                    <span style={{backgroundColor: value.color}}/>\n                                    {value.key}\n                                </li>\n                            )\n                        )\n                    }\n                </ul>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default ChartFilter;\n","import React from 'react';\n\n\nconst card = (props) => {\n    const className = props.customClass ? \"card \" + props.customClass : \"card\";\n    return (\n        <div className={className}>\n            <div className=\"card-wrapper\">\n                {props.children}\n            </div>\n        </div>\n    )\n};\n\nexport default card;\n","import React from 'react';\n\n\nconst CardTitle = (props) => <div className=\"card-title\">{props.children}</div>;\n\nexport default CardTitle;\n","import React from 'react';\n\n\nconst cardContent = (props) => <div className={\"card-content\" + (props.className ? \" \" + props.className : \"\") }>{props.children}</div>;\n\nexport default cardContent;\n","import React from 'react';\n\n\nconst CardCol = (props) => {\n    return (\n        <div className=\"card-col\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default CardCol;\n","import React from 'react';\n\nclass Timer extends React.Component {\n    state = {\n        initial: new Date().getTime(),\n        seconds:0,\n        minutes:0,\n        hours:0\n    };\n    padDigit = value => value < 10 ? \"0\" + value : value;\n    componentDidMount() {\n        this.start();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.start();\n    }\n    start = () => {\n        setTimeout(()=>{\n            const initial = (this.props.initial ?  this.props.initial : this.state.initial);\n            const currentTime = new Date().getTime();\n            const diff = parseInt((currentTime - initial) / 1000);\n            const seconds = diff % 60;\n            const minutes = parseInt(diff / 60) % 60;\n            const hours = parseInt(diff / 3600);\n            this.setState({\n                seconds: seconds,\n                minutes: minutes,\n                hours: hours\n            })\n        }, 1000)\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"timer-hour\">{this.state.hours}</div>\n                <div className=\"timer-minute\"> :{this.padDigit(this.state.minutes)}</div>\n                <div className=\"timer-second\"> :{this.padDigit(this.state.seconds)}</div>\n            </div>\n        )\n    };\n}\n\nexport default Timer;\n","import React from 'react';\n\n\nconst customCol = (props) => {\n    return (\n        <div className=\"card-col custom\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default customCol;\n\n\n","import React from 'react';\n\n\nconst customCard = (props) => {\n    return (\n        <div className=\"card-holder\">\n            <h1>{props.title}</h1>\n            <div className=\"row-content\">\n                <span>{props.value}</span>\n            </div>\n        </div>\n    )\n};\n\nexport default customCard;\n","import React from 'react';\nimport Card from '../card_row/card/Card';\nimport CardTitle from '../card_row/card/CardTitle';\nimport CardContent from '../card_row/card/CardContent';\nimport CardCol from '../card_row/card_col/CardCol';\nimport Timer from '../../../../components/timer/Timer';\nimport moment from \"moment\";\nimport CustomCol from \"./custom_col/CustomCol\";\nimport CustomCard from './custom_col/custom_card/CustomCard';\nimport { connect } from \"react-redux\";\n\nconst proxyCardRow = (props) => {\n    const node = props.node;\n    const nodeStartDate = moment(new Date(node.start)).format('YYYY-MM-DD');\n    const nodeStartTime = moment(new Date(node.start)).format(' HH:mm:ss');\n    return (\n        <React.Fragment>\n            <CardCol>\n                <Card>\n                    <CardTitle>Node Started At</CardTitle>\n                    <CardContent>\n                        <Timer initial={node.start}/>\n                        <CardContent className=\"sublime\">{nodeStartDate}</CardContent>\n                        <CardContent className=\"sublime\">{nodeStartTime}</CardContent>\n                    </CardContent>\n                </Card>\n            </CardCol>\n            <CardCol>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Node State</CardTitle>\n                    <CardContent\n                        className=\"text-blue\">{node.synced ? \"synced\" : \"synchronization\"}</CardContent>\n                </Card>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Mining status</CardTitle>\n                    <CardContent className=\"text-blue\">{node.mining ? \"Enabled\" : \"Disabled\"}</CardContent>\n                </Card>\n            </CardCol>\n            <CardCol>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Current Height</CardTitle>\n                    <CardContent>{node.height}</CardContent>\n                </Card>\n                <Card customClass=\"card-half\">\n                    <CardTitle>Peers Connected</CardTitle>\n                    <CardContent>{node.peers}</CardContent>\n                </Card>\n            </CardCol>\n            <CustomCol>\n                <CustomCard title=\"Node Version\" value={node.version}/>\n                <CustomCard title=\"Best Block id\" value={node.bestBlock}/>\n            </CustomCol>\n        </React.Fragment>\n    )\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        node: state.proxy.node\n    };\n};\n\nexport default connect(mapStateToProps)(proxyCardRow);\n","import React from 'react';\n\n\nconst CardTitle = (props) => <div className=\"card-title2\">{props.children}</div>;\n\nexport default CardTitle;\n","import React from 'react';\n\n\nconst cardContent = (props) => <div className=\"card-filter\">{props.children}</div>;\n\nexport default cardContent;\n","import React from 'react';\nimport ProxyCardRow from \"../proxy_card_row/ProxyCardRow\";\nimport Card from './card/Card';\nimport CardTitle from './card/CardTitle';\nimport CardTitle2 from './card/CardTitle2';\nimport CardFilter from './card/CardFilter';\nimport CardContent from './card/CardContent';\nimport CardCol from './card_col/CardCol';\nimport Timer from '../../../../components/timer/Timer';\nimport * as formatter from '../../../../formatter';\nimport { connect } from \"react-redux\";\nimport { Production } from '../../../../build/production';\n\nconst PERIOD_STATES = [\"Daily\", \"Weekly\", \"Monthly\"];\n\nclass CardRow extends React.Component {\n    state = {\n        period: \"Daily\"\n    };\n\n    rotatePeriod = () => {\n        this.setState(state => {\n            const index = (PERIOD_STATES.indexOf(state.period) + 1) % PERIOD_STATES.length;\n            return {\n                ...state,\n                period: PERIOD_STATES[index]\n            }\n        });\n    };\n\n    render = () => {\n        let contribution = 1;\n        if (this.props.round_valid_shares)\n            contribution = (this.props.dashboard.round_valid_shares / this.props.round_valid_shares);\n        contribution = (100 * contribution).toFixed(1);\n        const totalShare = this.props.dashboard.round_valid_shares + this.props.dashboard.round_invalid_shares;\n        const validShareRatio = (totalShare > 0 ? 100 * this.props.dashboard.round_valid_shares / totalShare : 100).toFixed(1);\n        const invalidShareRatio = (totalShare > 0 ? 100 * this.props.dashboard.round_invalid_shares / totalShare : 0).toFixed(1);\n        const hashRate = this.props.info.hash_rate;\n        let earning = 0;\n        if (hashRate.network !== 1) {\n            earning = 720.0 * (this.props.dashboard.user.hash_rate.avg - 1) / (hashRate.network - 1) * 67500000000;\n        }\n        if (this.state.period === \"Weekly\") {\n            earning *= 7;\n        } else if (this.state.period === \"Monthly\") {\n            earning *= 30;\n        }\n        return (\n            <div className=\"card-row\">\n                <CardCol>\n                    <Card>\n                        <CardTitle>Time Elapsed</CardTitle>\n                        <CardContent>\n                            <Timer initial={this.props.dashboard.timestamp}/>\n                        </CardContent>\n                        <CardTitle>Contribution</CardTitle>\n                        <CardContent>{contribution}%</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card customClass=\"card-half\">\n                        <CardTitle>Immature balance</CardTitle>\n                        <CardContent>{formatter.ergo(this.props.dashboard.user.immature)} Erg</CardContent>\n                    </Card>\n                    <Card customClass=\"card-half\">\n                        <CardTitle>Mature balance</CardTitle>\n                        <CardContent>{formatter.ergo(this.props.dashboard.user.mature)} Erg</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Shares (Round)</CardTitle>\n                        <CardTitle2>Valid {validShareRatio}%</CardTitle2>\n                        <CardContent>{this.props.dashboard.user.round_valid_shares}</CardContent>\n                        <CardTitle2>Invalid {invalidShareRatio}%</CardTitle2>\n                        <CardContent>{this.props.dashboard.user.round_invalid_shares}</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Hashrate</CardTitle>\n                        <CardTitle2>Current <br/>(30 minutes)</CardTitle2>\n                        <CardContent>{formatter.hashRate(this.props.dashboard.user.hash_rate.current)}H/s</CardContent>\n                        <CardTitle2>Average (24h)</CardTitle2>\n                        <CardContent>{formatter.hashRate(this.props.dashboard.user.hash_rate.avg)}H/s</CardContent>\n                    </Card>\n                </CardCol>\n                <CardCol>\n                    <Card>\n                        <CardTitle>Estimated Earning</CardTitle>\n                        <CardContent>{formatter.ergo(earning)} Erg</CardContent>\n                        <CardFilter>Time period filter</CardFilter>\n                        <CardContent>\n                            {this.state.period}\n                            <i className=\"ep-icon-filter\" onClick={this.rotatePeriod}/>\n                        </CardContent>\n                    </Card>\n                </CardCol>\n                {Production.IsProxy() ? (\n                    <ProxyCardRow/>\n                ) : null}\n                <div className=\"clear\"/>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    dashboard: state.api.dashboard,\n    api: state.api,\n    info: state.api.info,\n});\n\nexport default connect(mapStateToProps)(CardRow);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport UserLayout from '../../../layouts/user_layout/UserLayout';\nimport ChartFilter from \"../chart_filter/ChartFilter\";\nimport CardRow from './card_row/CardRow';\nimport Panel from '../../../components/panel/Panel';\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from 'rc-time-picker';\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'rc-time-picker/assets/index.css';\nimport { ApiNetwork } from \"../../../network/api\";\nimport * as formatter from '../../../formatter';\nimport { LineChart, Legend, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { loadApiDashboardAsync } from \"../../../store/actions/apiActions\";\n\nconst hashRateSeries = [\n    {key: \"current\", color: \"#42c3be\"},\n    {key: \"avg\", color: \"#5d62b5\"},\n];\n\nconst shareSeries = [\n    {key: \"valid\", color: \"#379f2c\"},\n    {key: \"invalid\", color: \"#d85e5a\"},\n];\n\nclass MainPage extends React.Component {\n    state = {\n        hashRate: {\n            user: '',\n            data: [],\n            fromDate: null,\n            fromTime: null,\n            toDate: null,\n            toTime: null,\n        },\n        share: {\n            user: '',\n            data: [],\n            fromDate: null,\n            fromTime: null,\n            toDate: null,\n            toTime: null,\n        },\n        userId: ''\n    };\n\n    setHashRateState = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                hashRate: {\n                    ...state.hashRate,\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    setShareState = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                share: {\n                    ...state.share,\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    getTimeStamp = (fromDate, fromTime) => {\n        if (fromDate && fromTime) {\n            const dateStr = fromDate.toDateString();\n            const timeStr = new Date(fromTime.toString()).toTimeString();\n            const startDateTime = new Date(dateStr + \" \" + timeStr);\n            return startDateTime.getTime() / 1000;\n        }\n        return null;\n    };\n\n    loadHashRateChart = (force = false) => {\n        if (this.props.userId !== this.state.hashRate.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    hashRate: {\n                        ...state.hashRate,\n                        user: this.props.userId\n                    }\n                }\n            });\n            let fromTimeStamp = this.getTimeStamp(this.state.hashRate.fromDate, this.state.hashRate.fromTime);\n            let toTimeStamp = this.getTimeStamp(this.state.hashRate.toDate, this.state.hashRate.toTime);\n            ApiNetwork.hashRate(this.props.userId, {\n                fromTimeStamp: fromTimeStamp,\n                toTimeStamp: toTimeStamp\n            }).then(response => {\n                this.setState(state => {\n                    return {\n                        ...state,\n                        hashRate: {\n                            ...state.hashRate,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadShareChart = (force = false) => {\n        if (this.props.userId !== this.state.share.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    share: {\n                        ...state.share,\n                        user: this.props.userId\n                    }\n                }\n            });\n            let fromTimeStamp = this.getTimeStamp(this.state.share.fromDate, this.state.share.fromTime);\n            let toTimeStamp = this.getTimeStamp(this.state.share.toDate, this.state.share.toTime);\n            ApiNetwork.share(this.props.userId, {\n                fromTimeStamp: fromTimeStamp,\n                toTimeStamp: toTimeStamp\n            }).then(response => {\n                this.setState(state => {\n                    return {\n                        ...state,\n                        share: {\n                            ...state.share,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadDashboard = () => {\n        if (this.props.userId !== this.state.userId) {\n            this.props.getApiDashboard();\n            this.setState({userId: this.props.userId});\n        }\n    }\n\n    loadCharts = () => {\n        this.loadHashRateChart();\n        this.loadShareChart();\n        this.loadDashboard();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.loadCharts();\n    }\n\n    componentDidMount() {\n        this.loadCharts();\n    };\n\n    render = () => {\n        return (\n            <div>\n                <CardRow/>\n                <Panel>\n                    <ResponsiveContainer height={337}>\n                        <LineChart data={this.state.hashRate.data}>\n                            <XAxis dataKey=\"timestamp\"\n                                   angle={45}\n                                   textAnchor=\"end\"\n                                   tickFormatter={timestamp => moment(new Date(1000 * timestamp)).format('HH:mm')}/>\n                            <YAxis tickFormatter={value => (formatter.hashRate(value) + \"H/s\")}/>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <Tooltip\n                                isAnimationActive={false}\n                                formatter={(value, name, props) => (formatter.hashRate(value) + \"H/s\")}\n                                labelFormatter={(value) => moment(new Date(1000 * value)).format(\"YYYY-MM-DD HH:mm\")}/>\n                            <Line isAnimationActive={false} type=\"linear\" dataKey=\"current\" stroke=\"#42c3be\"/>\n                            <Line isAnimationActive={false} type=\"monotone\" dataKey=\"avg\" stroke=\"#5d62b5\"/>\n                            <Legend verticalAlign=\"top\" height={36}/>\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <ChartFilter\n                        onApply={() => this.loadHashRateChart(true)}\n                        series={hashRateSeries}>\n                        <label>From</label>\n                        <DatePicker selected={this.state.hashRate.fromDate}\n                                    onChange={(date) => this.setHashRateState(\"fromDate\", date)}/>\n                        <TimePicker value={this.state.hashRate.fromTime}\n                                    onChange={(time) => this.setHashRateState(\"fromTime\", time)}/>\n                        <label>To</label>\n                        <DatePicker selected={this.state.hashRate.toDate}\n                                    onChange={(date) => this.setHashRateState(\"toDate\", date)}/>\n                        <TimePicker value={this.state.hashRate.toTime}\n                                    onChange={(time) => this.setHashRateState(\"toTime\", time)}/>\n                    </ChartFilter>\n                </Panel>\n                <Panel>\n                    <ResponsiveContainer height={337}>\n                        <LineChart data={this.state.share.data}>\n                            <XAxis dataKey=\"date\"\n                                   tickFormatter={timestamp => moment(new Date(1000 * timestamp)).format('HH:mm')}/>\n                            <YAxis/>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <Tooltip\n                                isAnimationActive={false}\n                                labelFormatter={(value) => moment(new Date(1000 * value)).format(\"YYYY-MM-DD HH:mm\")}/>\n                            <Line\n                                isAnimationActive={false}\n                                type=\"linear\"\n                                dataKey=\"valid\"\n                                stroke=\"#379f2c\"/>\n                            <Line\n                                isAnimationActive={false}\n                                type=\"monotone\"\n                                dataKey=\"invalid\"\n                                stroke=\"#d85e5a\"/>\n                        </LineChart>\n                    </ResponsiveContainer>\n                    <ChartFilter\n                        onApply={() => this.loadHashRateChart(true)}\n                        series={shareSeries}>\n                        <label>From</label>\n                        <DatePicker selected={this.state.share.fromDate}\n                                    onChange={(date) => this.setShareState(\"fromDate\", date)}/>\n                        <TimePicker value={this.state.share.fromTime}\n                                    onChange={(time) => this.setShareState(\"fromTime\", time)}/>\n                        <label>To</label>\n                        <DatePicker selected={this.state.share.toDate}\n                                    onChange={(date) => this.setShareState(\"toDate\", date)}/>\n                        <TimePicker value={this.state.share.toTime}\n                                    onChange={(time) => this.setShareState(\"toTime\", time)}/>\n                    </ChartFilter>\n                </Panel>\n            </div>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    info: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getApiDashboard: () => dispatch(loadApiDashboardAsync(true))\n    };\n};\n\nexport const MainPageConnected = connect(mapStateToProps, mapDispatchToProps)(MainPage);\n\nexport default withLayout(UserLayout)(MainPageConnected);\n\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport UserLayout from \"../../../layouts/user_layout/UserLayout\";\nimport Panel from '../../../components/panel/Panel';\n\nconst ConfigPage = (props) => {\n    return (\n        <div className=\"main\">\n            <Panel>\n            </Panel>\n        </div>\n    )\n};\n\nexport default withLayout(UserLayout)(ConfigPage);\n","import React from \"react\";\nimport {\n    BarChart,\n    Bar,\n    LineChart,\n    Line,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ReferenceArea, ResponsiveContainer\n} from \"recharts\";\n\nexport default class StreamingDemo extends React.Component {\n    state = {\n        refAreaLeft: \"\",\n        refAreaRight: \"\",\n        zoomStart: \"\",\n        zoomEnd: \"\",\n        sliceData: []\n    };\n\n    zoom() {\n        let {refAreaLeft, refAreaRight} = this.state;\n        if (refAreaLeft === refAreaRight || refAreaRight === \"\") {\n            this.setState(() => ({\n                refAreaLeft: \"\",\n                refAreaRight: \"\"\n            }));\n            return;\n        }\n        // xAxis domain\n        if (refAreaLeft > refAreaRight)\n            [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n        const leftIndex = this.props.data.findIndex(item => item[this.props.xKey] === refAreaLeft);\n        const rightIndex = this.props.data.findIndex(item => item[this.props.xKey] === refAreaRight);\n        this.setState((oldState) => ({\n            refAreaLeft: \"\",\n            refAreaRight: \"\",\n            zoomStart: refAreaLeft,\n            zoomEnd: refAreaRight,\n            sliceData: this.props.data.slice(leftIndex, rightIndex),\n        }));\n    }\n    onMouseDown(e) {\n        try {\n            this.setState({refAreaLeft: e.activeLabel});\n        }catch (e) {\n\n        }\n    }\n    onMouseMove(e) {\n        try {\n            if(this.state.refAreaLeft)\n                this.setState({refAreaRight: e.activeLabel})\n        }catch (e) {\n\n        }\n    }\n\n    xFormatter = value => {\n        console.log(value);\n        if(this.props.xFormatter){\n            return this.props.xFormatter(value)\n        }\n        return value;\n    };\n\n    render() {\n        let sliceData = this.state.sliceData;\n        if(sliceData.length === 0)\n            sliceData = this.props.data;\n        return (\n            <div className=\"highlight-bar-charts\">\n                <ResponsiveContainer height={337}>\n                    <BarChart data={sliceData}>\n                        <XAxis\n                            tickFormatter={this.xFormatter}\n                            dataKey={this.props.xKey}/>\n                        <YAxis/>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <Tooltip isAnimationActive={false}/>\n                        <Bar\n                            isAnimationActive={false}\n                            dataKey={this.props.yKey}\n                            stroke={this.props.color}\n                            fill={this.props.color}/>\n                    </BarChart>\n                </ResponsiveContainer>\n                <ResponsiveContainer height={100}>\n                    <LineChart data={this.props.data}\n                               onMouseDown={this.onMouseDown.bind(this)}\n                               onMouseMove={this.onMouseMove.bind(this)}\n                               onMouseUp={this.zoom.bind(this)}>\n                        <XAxis dataKey={this.props.xKey}/>\n                        <YAxis/>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <Line\n                            type=\"monotone\"\n                            dataKey={this.props.yKey}\n                            stroke={this.props.color}\n                            fill={this.props.color}\n                            isAnimationActive={false}/>\n                        {this.state.refAreaLeft && this.state.refAreaRight ? (\n                        <ReferenceArea\n                            x1={this.state.refAreaLeft}\n                            x2={this.state.refAreaRight}\n                            strokeOpacity={0.3}\n                        />) : (<ReferenceArea\n                            x1={0}\n                            x2={this.state.zoomStart}\n                            strokeOpacity={0.3}\n                        />)}\n                        {this.state.refAreaLeft && this.state.refAreaRight ? null :<ReferenceArea\n                                x1={this.state.zoomEnd}\n                                x2={this.props.data.length - 1}\n                                strokeOpacity={0.3}\n                            />}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport apiNetworking from '../../../../network/api';\n\nclass WalletBox extends React.Component {\n    state = {\n        amount: 0,\n        address: '',\n        walletAmount: 0\n    };\n    onChange = (key, value) => {\n        this.setState({[key]: value});\n    };\n    onSubmit = () => {\n        apiNetworking.post('/balance/', {\n            \"miner\": this.props.userId,\n            \"balance\": this.state.amount\n        }).then(response => {\n\n        }, error => {\n\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"split-panel\">\n                <div className=\"split-panel-form\">\n                    <label>\n                        Recipient address\n                        <input value={this.state.address}\n                               onChange={event => this.onChange(\"address\", event.target.value)}/>\n                    </label>\n                    <label>\n                        Amount\n                        <input value={this.state.amount}\n                               onChange={event => this.onChange(\"amount\", event.target.value)}/>\n                    </label>\n                    <button className=\"btn blue\" onClick={this.onSubmit}> Submit </button>\n                </div>\n                <div className=\"split-panel-text\">\n                    <h1>Wallet Balance</h1>\n                    <h1>{this.state.walletAmount}</h1>\n                    <h1>Erg</h1>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default WalletBox;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Production } from \"../../../build/production\";\nimport ZoomableChart from \"../../../components/zoomable_chart/ZoomableChart\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport UserLayout from \"../../../layouts/user_layout/UserLayout\";\nimport Panel from '../../../components/panel/Panel';\nimport moment from \"moment\";\nimport WalletBox from \"./wallet_box/WalletBox\";\n// import Withdraw from './withdraw/Withdraw';\n// import Payout from './payout/Payout';\nimport { ApiNetwork } from \"../../../network/api\";\n\n\nclass WalletPage extends React.Component {\n    state = {\n        data: [],\n        income: {\n            user: '',\n            data: [],\n        },\n        payout: {\n            user: '',\n            data: [\n                {date: new Date().getTime() / 1000, payout: 0},\n            ]\n        }\n    };\n\n    loadPayoutChart = (force = false) => {\n        if (this.props.userId !== this.state.payout.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    payout: {\n                        ...state.payout,\n                        user: this.props.userId\n                    }\n                }\n            });\n            ApiNetwork.payout(this.props.userId).then(response => {\n                this.setState(state => {\n                    let data = response.data.results;\n                    console.log(data)\n                    if (!data || data.length === 0)\n                        data = [{date: new Date().getTime() / 1000, payout: 0}];\n                    data.forEach(data_row => {\n                        if(data_row.amount < 0){\n                            data_row.amount = -data_row.amount;\n                        }\n                    })\n                    return {\n                        ...state,\n                        payout: {\n                            ...state.payout,\n                            user: this.props.userId,\n                            data: data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadIncomeChart = (force = false) => {\n        if (this.props.userId !== this.state.income.user || force) {\n            this.setState(state => {\n                return {\n                    ...state,\n                    income: {\n                        ...state.income,\n                        user: this.props.userId\n                    }\n                }\n            });\n            ApiNetwork.income(this.props.userId).then(response => {\n                console.log(response.data)\n                this.setState(state => {\n                    return {\n                        ...state,\n                        income: {\n                            ...state.income,\n                            user: this.props.userId,\n                            data: response.data,\n                        }\n                    }\n                });\n            });\n        }\n    };\n\n    loadCharts = () => {\n        this.loadPayoutChart();\n        this.loadIncomeChart();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.loadCharts();\n    }\n\n    componentDidMount() {\n        this.loadCharts();\n    };\n\n\n    render() {\n        return (\n            <div>\n                {Production.IsProxy() ? (\n                    <Panel>\n                        <WalletBox/>\n                    </Panel>\n                ) : null}\n                {/*<Panel>*/}\n                {/*    <Withdraw/>*/}\n                {/*</Panel>*/}\n                <Panel>\n                    <ZoomableChart\n                        height={337}\n                        color=\"var(--azul)\"\n                        xKey=\"date\"\n                        yKey=\"amount\"\n                        xFormatter={timestamp => moment(new Date(1000 * timestamp)).format('YYYY:MM')}\n                        // yFormatter={amount => amount/1e9}\n                        data={this.state.payout.data}>\n\n                    </ZoomableChart>\n                </Panel>\n                <Panel>\n                    <ZoomableChart\n                        height={337}\n                        color=\"#42c3be\"\n                        xKey=\"height\"\n                        yKey=\"balance\"\n                        data={this.state.income.data}>\n\n                    </ZoomableChart>\n                </Panel>\n                {/*<Payout/>*/}\n            </div>\n        )\n    };\n}\n\n\nconst mapStateToProps = state => ({\n    info: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport const WalletPageConnected = connect(mapStateToProps, mapDispatchToProps)(WalletPage);\nexport default withLayout(UserLayout)(WalletPageConnected);\n","import React from 'react';\n\n\nconst Header = (props) => {\n    return <div onClick={props.clicked} className=\"header\">{props.content}</div>;\n};\n\nexport default Header;\n","import React from 'react';\nimport { Markdown } from 'react-showdown';\n\nconst Content = (props) => (\n    <div className=\"content\">\n        <div className=\"wrapper\">\n            <Markdown markup={props.content}/>\n        </div>\n    </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport Header from './Header/Header';\nimport Content from './Content/Content';\n\nconst Element = (props) => {\n    return (\n        <li className={props.display ? \"active\" : null}>\n            <Header\n                content={props.title}\n                clicked={props.active}\n            />\n            <Content\n                content={props.content}\n                display={props.display}\n            />\n        </li>\n    )\n};\n\nexport default Element;\n","import React from 'react';\nimport Element from './Element/Element';\n\nclass Accordion extends React.Component {\n    state = {\n        current: 0\n    };\n    handleElementChange = (index) => {\n        this.setState({current: index});\n    };\n\n    render = () => {\n        let elements = this.props.rows.map((content, index) => {\n            return (\n                <Element\n                    key={index}\n                    title={content.question}\n                    content={content.answer}\n                    display={this.state.current === index}\n                    active={()=>this.handleElementChange(index)}\n                />\n            )\n        });\n        return (\n            <ul className=\"accordion\">\n                {elements}\n            </ul>\n        )\n    };\n}\n\nexport default Accordion;\n","import React from 'react';\nimport { ApiNetwork } from \"../../../network/api\";\nimport Accordion from './Accordion/Accordion';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\n\n\nclass Faq extends React.Component {\n    state = {\n        questions: []\n    };\n\n    componentWillMount() {\n        ApiNetwork.getUiJson(\"Faq.json\").then(data => {\n            this.setState({questions: data.items});\n        })\n    }\n\n    render() {\n        console.log(this.state.questions);\n        return (\n            <div className=\"faq\">\n                <Accordion rows={this.state.questions}/>\n                <div className=\"support\">\n                    Can't find what you are looking for? Ask us in Support section\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(MainLayout, {\n    title: 'Frequently Asked Questions'\n})(Faq);\n","import React from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { ApiNetwork } from \"../../../../network/api\";\n\nclass SupportForm extends React.Component {\n    state = {\n        recaptcha: '',\n        name: '',\n        email: '',\n        subject: '',\n        message: '',\n        siteKey: '',\n        responseMessage: '',\n        responseClass: '',\n    };\n\n    setKey = (key, value) => {\n        this.setState({[key]: value})\n    };\n\n    getRecaptcha = () => {\n        ApiNetwork.getSupport().then(data => {\n            if(data.site_key !== this.state.siteKey){\n                this.setState({siteKey: data.site_key});\n            }\n        })\n    };\n\n    componentWillMount() {\n        this.getRecaptcha();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.getRecaptcha();\n    }\n\n    setResponseMessage = (message, className) => {\n        this.setState({responseMessage: message, responseClass: className});\n        setTimeout(()=>{this.setState({responseMessage: '', responseClass: ''})}, 5000);\n    };\n\n    submit = (event) => {\n        event.preventDefault();\n        ApiNetwork.support(\n            this.state.name,\n            this.state.email,\n            this.state.subject,\n            this.state.message,\n            this.state.recaptcha\n        ).then(response => {\n            this.setResponseMessage(\"Successfully submitted\", \"success\")\n        }).catch(error=>{\n            console.log(error);\n            this.setResponseMessage(\"an error occurred\", \"error\")\n        })\n    };\n\n    render = () => {\n        if(this.state.siteKey) {\n            return (\n                <form onSubmit={this.submit}>\n                    <div className={this.state.responseClass}>{this.state.responseMessage}</div>\n                    <label htmlFor=\"support_name\">Full Name</label>\n                    <input className=\"input\"\n                           id=\"support_name\"\n                           type=\"text\"\n                           value={this.state.name}\n                           onChange={(event => this.setKey(\"name\", event.target.value))}/>\n\n                    <label htmlFor=\"support_email\">Email Address</label>\n                    <input className=\"input\"\n                           id=\"support_email\"\n                           type=\"text\"\n                           value={this.state.email}\n                           onChange={(event => this.setKey(\"email\", event.target.value))}/>\n\n                    <label htmlFor=\"support_subject\">Subject</label>\n                    <input className=\"input\"\n                           id=\"support_subject\"\n                           type=\"text\"\n                           value={this.state.subject}\n                           onChange={(event => this.setKey(\"subject\", event.target.value))}/>\n                    <label>\n                        <ReCAPTCHA\n                            sitekey={this.state.siteKey}\n                            onChange={value => this.setKey('recaptcha', value)}\n                        />\n                    </label>\n                    <label htmlFor=\"support_message\">Message</label>\n                    <textarea id=\"support_message\"\n                              className=\"textarea\"\n                              rows=\"5\"\n                              value={this.state.message}\n                              onChange={(event => this.setKey(\"message\", event.target.value))}>\n                    </textarea>\n                    <input type=\"submit\" className=\"btn blue\" value=\"Submit\"/>\n                </form>\n            )\n        }\n        return null;\n    };\n}\n\nexport default SupportForm;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport MainLayout from '../../../layouts/main_layout/MainLayout';\nimport SupportForm from './support_form/SupportForm';\n\nconst support = () => {\n    return (\n        <div className=\"vertical-form\">\n            <div className=\"column\">\n                <div className=\"content\">\n                    Have you tried our <Link to='/faq'>F.A.Q</Link> section yet?\n                    It has lots of information about the site,\n                    and answers to most questions about using our services.\n                    You should check it out!\n                    <br/>\n                    <br/>\n                    Still need help?\n                    Use this form to get in touch.\n                    Our office hours are Saturday through Wednesday, 8 am to 5 pm +3:30 GMT,\n                    and we attempt to respond to support requests within 1 business day.\n                </div>\n            </div>\n            <div className=\"column\">\n                <div className=\"content\">\n                    <SupportForm/>\n                </div>\n            </div>\n            <div className=\"clear\"/>\n        </div>\n    )\n};\n\n\nexport default withLayout(MainLayout, {\n    hide_search: true,\n    title: 'Questions, Comments or Concerns?'\n})(support);\n","import React from 'react';\n\n\nconst dataTable = (props) => {\n    return (\n        <table>\n            <thead>\n            <tr>\n                {props.columns.map(column => (\n                    <th key={column.key} className=\"sorted\">\n                        <button className=\"sort-button\"\n                                onClick={() => props.sort ? props.sort(column.key) : null}>\n                            {column.header} &nbsp;\n                            {column.key === props.sorting ? props.sortingDir === 'asc' ?\n                                <i className=\"ep-icon-sorted\"/> : <i className=\"ep-icon-sorted flipped\"/> :\n                                <i className=\"ep-icon-sort\"/>}\n                        </button>\n                    </th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.data.map(dataRow => (\n                <tr key={dataRow.key}>\n                    {props.columns.map(column => (\n                        <td key={column.key} onClick={() => props.rowSelect ? props.rowSelect(dataRow) : null}>\n                            {column.content ? column.content(dataRow) : <span>{dataRow[column.key]}</span>}\n                        </td>\n                    ))}\n                </tr>\n            ))}\n            {props.footer ? (\n                <tr colSpan={props.columns.length}>\n                    <td>\n                        {this.props.footer}\n                    </td>\n                </tr>\n            ) : null}\n            </tbody>\n        </table>\n    )\n};\n\nexport default dataTable;\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport AdminLayout from '../../../layouts/admin_layout/AdminLayout'\nimport { ApiNetwork } from \"../../../network/api\";\nimport { hashRate, username } from '../../../formatter'\nimport DataTable from '../../../components/data_table/DataTable';\n\nconst columns = [\n    {header: \"User\", key: \"user\", content: (row) => username(row.user)},\n    {header: \"Hash rate\", key: \"hash_rate\", content: (row) => hashRate(row.hash_rate)},\n    {header: \"Valid Shares\", key: \"valid_shares\"},\n    {header: \"Invalid Shares\", key: \"invalid_shares\"},\n    {header: \"Last IP\", key: \"last_ip\"},\n    {header: \"Status\", key: \"status\", content: (row) => row.status},\n];\n\nclass User extends React.Component {\n    state = {\n        \"data\": [],\n        \"sorting\": \"date\",\n        \"sortingDir\": \"asc\",\n        \"pageIndex\": 0,\n        \"perPage\": 10\n    };\n\n    loadUsers = () => {\n        ApiNetwork.getUsers().then(response => {\n            this.setState({data: response.results});\n        });\n    };\n\n    componentWillMount() {\n        this.loadUsers();\n    }\n\n    sort = columnIndex => {\n        this.setState(state => {\n            const dir = this.state.sorting === columnIndex && this.state.sortingDir === 'asc' ? \"dest\" : \"asc\";\n            return {\n                ...state,\n                sorting: columnIndex,\n                sortingDir: dir\n            }\n        });\n    };\n\n    rowSelect = userRow => {\n        this.props.history.push(\"/admin/user/\" + userRow.user + \"/\");\n    };\n\n    render() {\n        return (\n            <div className=\"panel custom-table\">\n                <DataTable\n                    sort={this.sort}\n                    sorting={this.state.sorting}\n                    sortingDir={this.state.sortingDir}\n                    data={this.state.data}\n                    rowSelect={this.rowSelect}\n                    columns={columns}/>\n            </div>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(User);\n","import React from 'react';\n\nconst miningParamForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Pool base factor</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.POOL_BASE_FACTOR}\n                            onChange={event => props.save(\"POOL_BASE_FACTOR\", event.target.value)}\n                        />\n                        <label>Latest allowed height for mining</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.THRESHOLD_HEIGHT}\n                            onChange={event => props.save(\"THRESHOLD_HEIGHT\", event.target.value)}\n                        />\n                        <label>Timestamp diff allowed to miner</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.THRESHOLD_TIMESTAMP}\n                            onChange={event => props.save(\"THRESHOLD_TIMESTAMP\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>Save changes</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        this is comments about this panel\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default miningParamForm;\n","import React from 'react';\n\nconst rewardForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Total reward of round</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.TOTAL_REWARD}\n                            onChange={event => props.save(\"TOTAL_REWARD\", event.target.value)}\n                        />\n                        <label>Total reward factor for pool transaction</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.REWARD_FACTOR}\n                            onChange={event => props.save(\"REWARD_FACTOR\", event.target.value)}\n                        />\n                        <label>Pool reward factor result precision</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.REWARD_FACTOR_PRECISION}\n                            onChange={event => props.save(\"REWARD_FACTOR_PRECISION\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>Save changes</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Pool fee factor</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.FEE_FACTOR}\n                            onChange={event => props.save(\"FEE_FACTOR\", event.target.value)}\n                        />\n                        <label>maximum reward anyone can receive in reward sharing</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_REWARD}\n                            onChange={event => props.save(\"MAX_REWARD\", event.target.value)}\n                        />\n                        <label>Reward algorithm used for sharing reward</label>\n                        <select\n                            className=\"input\"\n                            value={props.REWARD_ALGORITHM}\n                            onChange={event => props.save(\"REWARD_ALGORITHM\", event.target.value)}\n                        >\n                            <option value=\"prop\">Prop</option>\n                            <option value=\"pplns\">PPLNS</option>\n                        </select>\n                        {props.REWARD_ALGORITHM === \"pplns\" ? (\n                            <React.Fragment>\n                                <label>Last share used in PPLNS to calculate reward of each user</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"input\"\n                                    value={props.PPLNS_N}\n                                    onChange={event => props.save(\"PPLNS_N\", event.target.value)}\n                                />\n                            </React.Fragment>\n                        ) : null}\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default rewardForm;\n","import React from 'react';\n\nconst withdrawForm = props => {\n    const submit = event => {\n        event.preventDefault();\n        props.submit();\n    };\n    return (\n        <form onSubmit={submit}>\n            <div className=\"vertical-form\">\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Transaction fee of a transaction</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.TRANSACTION_FEE}\n                            onChange={event => props.save(\"TRANSACTION_FEE\", event.target.value)}\n                        />\n                        <label>Confirmation length for balances to be mature</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.CONFIRMATION_LENGTH}\n                            onChange={event => props.save(\"CONFIRMATION_LENGTH\", event.target.value)}\n                        />\n                        <label>Maximum number of outputs a transaction can have</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_NUMBER_OF_OUTPUTS}\n                            onChange={event => props.save(\"MAX_NUMBER_OF_OUTPUTS\", event.target.value)}\n                        />\n                        <div className=\"button-row\">\n                            <button className=\"btn blue\" onClick={submit}>Save changes</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"content\">\n                        <label>Miner can not set his withdrawal threshold smaller than this</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MIN_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"MIN_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                        <label>Miner can not set his withdrawal threshold bigger than this</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.MAX_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"MAX_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                        <label>Default value for periodic withdrawal if not set by miner explicitly</label>\n                        <input\n                            type=\"number\"\n                            className=\"input\"\n                            value={props.DEFAULT_WITHDRAW_THRESHOLD}\n                            onChange={event => props.save(\"DEFAULT_WITHDRAW_THRESHOLD\", event.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"clear\"/>\n            </div>\n        </form>\n    )\n};\n\n\nexport default withdrawForm;\n","import React from 'react';\nimport withLayout from '../../../hoc/with_layout/withLayout';\nimport Panel from '../../../components/panel/Panel';\nimport AdminLayout from '../../../layouts/admin_layout/AdminLayout'\nimport { ApiNetwork } from \"../../../network/api\";\nimport MiningParamForm from \"./MiningParamForm\";\nimport RewardForm from \"./RewardForm\";\nimport WithdrawForm from \"./WithdrawForm\";\n\nconst REWARD_KEYS = [\n    \"TOTAL_REWARD\",\n    \"REWARD_FACTOR\",\n    \"REWARD_FACTOR_PRECISION\",\n    \"FEE_FACTOR\",\n    \"MAX_REWARD\",\n    \"PPLNS_N\",\n    \"REWARD_ALGORITHM\",\n];\n\nconst WITHDRAW_KEYS = [\n    \"TRANSACTION_FEE\",\n    \"MAX_NUMBER_OF_OUTPUTS\",\n    \"MIN_WITHDRAW_THRESHOLD\",\n    \"MAX_WITHDRAW_THRESHOLD\",\n    \"DEFAULT_WITHDRAW_THRESHOLD\",\n    \"CONFIRMATION_LENGTH\",\n\n];\n\nconst MINING_KEYS = [\n    \"POOL_BASE_FACTOR\",\n    \"THRESHOLD_HEIGHT\",\n    \"THRESHOLD_TIMESTAMP\",\n];\n\nclass Manage extends React.Component {\n    state = {\n        reward: {\n            TOTAL_REWARD: null,\n            REWARD_FACTOR: null,\n            REWARD_FACTOR_PRECISION: null,\n            FEE_FACTOR: null,\n            MAX_REWARD: null,\n            PPLNS_N: null,\n            REWARD_ALGORITHM: \"PPLNS\",\n        },\n        withdraw: {\n            TRANSACTION_FEE: null,\n            MAX_NUMBER_OF_OUTPUTS: null,\n            MIN_WITHDRAW_THRESHOLD: null,\n            MAX_WITHDRAW_THRESHOLD: null,\n            DEFAULT_WITHDRAW_THRESHOLD: null,\n            CONFIRMATION_LENGTH: null,\n        },\n        mining: {\n            POOL_BASE_FACTOR: null,\n            THRESHOLD_HEIGHT: null,\n            THRESHOLD_TIMESTAMP: null,\n        }\n    };\n\n    savePanelValue = (panel, key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                [panel]: {\n                    ...state[panel],\n                    [key]: value\n                }\n            }\n        })\n    };\n\n    submitPanel = panel => {\n        ApiNetwork.setConfig(this.state[panel]);\n    };\n\n    componentWillMount() {\n        ApiNetwork.getConfig().then(response => {\n            const reward = Object.keys(response)\n                .filter(key => REWARD_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            const withdraw = Object.keys(response)\n                .filter(key => WITHDRAW_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            const mining = Object.keys(response)\n                .filter(key => MINING_KEYS.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = response[key];\n                    return obj;\n                }, {});\n            this.setState({\n                reward: reward,\n                withdraw: withdraw,\n                mining: mining\n            });\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>Mining parameters</div>\n                <Panel>\n                    <MiningParamForm\n                        save={(key, value) => this.savePanelValue(\"mining\", key, value)}\n                        submit={() => this.submitPanel(\"mining\")}\n                        {...this.state.mining} />\n                </Panel>\n                <div>Reward</div>\n                <Panel>\n                    <RewardForm\n                        save={(key, value) => this.savePanelValue(\"reward\", key, value)}\n                        submit={() => this.submitPanel(\"reward\")}\n                        {...this.state.reward} />\n                </Panel>\n                <div>withdraw</div>\n                <Panel>\n                    <WithdrawForm\n                        save={(key, value) => this.savePanelValue(\"withdraw\", key, value)}\n                        submit={() => this.submitPanel(\"withdraw\")}\n                        {...this.state.withdraw} />\n                </Panel>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(Manage);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport withLayout from \"../../../hoc/with_layout/withLayout\";\nimport { setUserPk } from \"../../../store/actions/apiActions\";\nimport AdminLayout from \"../AdminLayout\";\nimport Address from '../../user_layout/address/Address';\nimport { NavLink } from \"react-router-dom\";\n\nclass AdminUserLayout extends React.Component {\n\n    updateUserId = () => {\n        const urlUserId = this.props.match.params.userId;\n        const stateUserId = this.props.userId;\n        if (urlUserId !== stateUserId) {\n            this.props.setUserPk(urlUserId);\n        }\n    };\n\n    componentDidMount() {\n        this.updateUserId();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.updateUserId();\n    }\n\n    getUrl = prefix => \"/admin/user/\" + this.props.match.params.userId + prefix;\n    render = () => {\n        return (\n            <React.Fragment>\n                <Address userId={this.props.match.params.userId}>\n                    <div className=\"admin-actions\">\n                        <NavLink to={this.getUrl('/')} exact={true}><i className=\"ep-icon-user-dashboard\"/></NavLink>\n                        <NavLink to={this.getUrl(\"/wallet/\")} exact={true}><i\n                            className=\"ep-icon-user-wallet\"/></NavLink>\n                        {/*<NavLink to=\"/\" exact={true}><i className=\"ep-icon-user-dashboard\"/></NavLink>*/}\n                    </div>\n                </Address>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nconst mapStateToProps = state => ({\n    dashboard: state.api.dashboard,\n    userId: state.api.userId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setUserPk: (userId) => dispatch(setUserPk(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLayout(AdminLayout)(AdminUserLayout));\n","import withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport { MainPageConnected } from \"../../../user/main/MainPage\";\nimport AdminUserLayout from '../../../../layouts/admin_layout/admin_user_layout/AdminUserLayout';\n\nexport default withLayout(AdminUserLayout)(MainPageConnected);\n","import withLayout from \"../../../../hoc/with_layout/withLayout\";\nimport { WalletPageConnected } from \"../../../user/wallet/WalletPage\";\nimport AdminUserLayout from '../../../../layouts/admin_layout/admin_user_layout/AdminUserLayout';\n\nexport default withLayout(AdminUserLayout)(WalletPageConnected);\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport AdminLayout from '../AdminLayout';\nimport withLayout from '../../../hoc/with_layout/withLayout';\n\nclass AdminUiManageLayout extends React.Component {\n\n    getUrl = (suffix) => \"/admin/ui-manage/\" + suffix;\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <ul className=\"tab-bar-flex\">\n                    <li>\n                        <NavLink to={this.getUrl(\"faq\")} exact>Faq content</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"static\")} exact>Static pages</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"menu\")} exact>Menu links</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"footer\")} exact>Footer links</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"index\")} exact>Index</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={this.getUrl(\"notification\")} exact>Notifications</NavLink>\n                    </li>\n                </ul>\n                {this.props.children}\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminLayout)(AdminUiManageLayout);\n","import React from 'react';\nimport withLayout from '../../hoc/with_layout/withLayout';\nimport AdminUiManageLayout from '../../layouts/admin_layout/admin_ui_manage_layout/AdminUiManageLayout';\nimport { ApiNetwork } from \"../../network/api\";\nimport ReactMde from \"react-mde\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport * as Showdown from \"showdown\";\n// import { Reorder } from \"../../utils\";\n\nconst converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n});\n\nclass FaqUiManage extends React.Component {\n\n    state = {\n        extra: {},\n        elements: [],\n        edit: -1,\n    };\n\n    initialElements = () => {\n        if (this.props.initial && this.props.objectKey) {\n            const elements = [...this.state.elements];\n            const available = elements.map(item => item[this.props.objectKey]);\n            let addedElement = 0;\n            this.props.initial.map(item => {\n                if (available.indexOf(item) < 0) {\n                    const row = this.createEmptyRow();\n                    row[this.props.objectKey] = item;\n                    elements.push(row);\n                    addedElement += 1;\n                }\n                return null;\n            });\n            if (addedElement > 0) {\n                this.setState({elements: elements});\n            }\n        }\n    };\n\n    createEmptyRow = () => {\n        const res = {};\n        this.props.items.map(element => {\n            res[element.key] = \"\";\n            if (element.choices) {\n                res[element.key] = element.choices[0];\n            }\n            return null;\n        });\n        if (this.props.content) {\n            res[this.props.content] = '';\n        }\n        return res;\n    };\n\n    addRow = () => {\n        this.setState(state => {\n            const newElement = this.createEmptyRow();\n            return {\n                ...state,\n                elements: [\n                    ...state.elements,\n                    newElement\n                ],\n                edit: state.elements.length,\n                editElement: newElement\n            }\n        })\n    };\n\n    removeRow = (index) => {\n        this.setState(state => {\n            return {\n                ...state,\n                elements: state.elements.filter((elem, elemIndex) => elemIndex !== index)\n            }\n        })\n    };\n\n    editRow = index => {\n        const selectedElement = this.state.elements[index];\n        this.setState({\n            edit: index,\n            editElement: {...selectedElement}\n        });\n    };\n\n    saveChanges = () => {\n        this.setState(state => ({\n            edit: -1,\n            elements: state.elements.map((question, index) => {\n                return index === state.edit ? state.editElement : question\n            }),\n            editElement: {}\n        }));\n    };\n\n    submit = () => {\n        const postData = {items: [...this.state.elements]};\n        if(this.props.extra)\n            postData.extra = {...this.state.extra};\n        ApiNetwork.setUiJson(this.props.uiPath, postData).then(response => {\n            console.log(response);\n        }).catch(error => {\n            console.log(error);\n        })\n    };\n\n    componentWillMount() {\n        ApiNetwork.getUiJson(this.props.uiPath).then(data => {\n            if(this.props.extra && data.extra){\n                this.setState({elements: data.items, extra: data.extra, edit: -1});\n            }else{\n                this.setState({elements: data.items, edit: -1});\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.initialElements();\n    }\n\n    storeValue = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                editElement: {\n                    ...state.editElement,\n                    [key]: value\n                }\n            };\n        })\n    };\n\n    storeExtraValue = (key, value) => {\n        this.setState(state => {\n            return {\n                ...state,\n                extra: {\n                    ...state.extra,\n                    [key]: value\n                }\n            };\n        })\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.extra ? (\n                    <div className=\"panel\">\n                        <div className=\"panel-content\">\n                            {this.props.extra.map(item => (\n                                <label>\n                                    {item.title}\n                                    <input\n                                        type=\"text\"\n                                        value={this.state.extra[item.key]}\n                                        onChange={(event => this.storeExtraValue(item.key, event.target.value))}/>\n                                </label>\n                            ))}\n                        </div>\n                    </div>\n                ) : null}\n                <div className=\"panel custom-table\">\n                    <table className=\"left-align\">\n                        <thead>\n                        <tr>\n                            {this.props.items.map(item => <th key={item.key}>{item.title}</th>)}\n                            <th width={200}>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.elements.map((dataRow, index) => (\n                            <React.Fragment key={index}>\n                                <tr className={index === this.state.edit ? \"edit-row\" : null}>\n                                    {this.props.items.map(item => {\n                                        return (<td key={item.key}>\n                                            {index === this.state.edit ? (item.choices ? (\n                                                <select\n                                                    className=\"input\"\n                                                    onChange={event => this.storeValue(item.key, event.target.value)}\n                                                    value={this.state.editElement[item.key]}>\n                                                    {item.choices.map(item => <option key={item}\n                                                                                      value={item}>{item}</option>)}\n                                                </select>\n                                            ) : (\n                                                <input type=\"text\" className=\"input\"\n                                                       value={this.state.editElement[item.key]}\n                                                       onChange={event => this.storeValue(item.key, event.target.value)}/>\n                                            )) : (\n                                                <React.Fragment>\n                                                    {/*<i className=\"ep-icon-move\"/>*/}\n                                                    &nbsp;{dataRow[item.key]}\n                                                </React.Fragment>\n                                            )}\n                                        </td>)\n                                    })}\n                                    <td className=\"center\">\n                                        {index === this.state.edit ? (\n                                            <React.Fragment>\n                                                <button onClick={this.saveChanges}>\n                                                    <i className=\"ep-icon-edit\"/>\n                                                </button>\n                                                <button onClick={() => this.setState({edit: -1})}>\n                                                    <i className=\"ep-icon-close\"/>\n                                                </button>\n                                            </React.Fragment>\n                                        ) : (\n                                            <React.Fragment>\n                                                <button onClick={() => this.editRow(index)}>\n                                                    <i className=\"ep-icon-edit\"/>\n                                                </button>\n                                                {this.props.objectKey && this.props.initial && this.props.initial.find(value => value === dataRow[this.props.objectKey]) ? null : (\n                                                    <button onClick={() => this.removeRow(index)}>\n                                                        <i className=\"ep-icon-delete\"/>\n                                                    </button>\n                                                )}\n                                            </React.Fragment>\n                                        )}\n                                    </td>\n                                </tr>\n                                {(index === this.state.edit && this.props.contentKey) ? (\n                                    <tr className=\"edit-row\">\n                                        <td colSpan={this.props.items.length + 1}>\n                                            <ReactMde\n                                                value={this.state.editElement[this.props.contentKey]}\n                                                selectedTab={this.state.editorSelectedTab}\n                                                onTabChange={value => this.setState({editorSelectedTab: value})}\n                                                generateMarkdownPreview={markdown =>\n                                                    Promise.resolve(converter.makeHtml(markdown))\n                                                }\n                                                onChange={value => this.setState(state => {\n                                                    return {\n                                                        ...state,\n                                                        editElement: {\n                                                            ...state.editElement,\n                                                            [this.props.contentKey]: value\n                                                        }\n                                                    }\n                                                })}/>\n                                        </td>\n                                    </tr>\n                                ) : null}\n                            </React.Fragment>\n                        ))}\n                        </tbody>\n                        <tfoot>\n                        <tr>\n                            <td colSpan={this.props.items.length + 1} style={{padding: 10}}>\n                                <button onClick={this.addRow}>\n                                    <i className=\"ep-icon-plus\"/> Add new\n                                </button>\n                                {this.state.edit === -1 ? (\n                                    <button className=\"btn blue\" onClick={this.submit} style={{float: \"right\"}}>\n                                        Save\n                                    </button>\n                                ) : null}\n                            </td>\n                        </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </React.Fragment>\n        )\n    };\n}\n\nexport default withLayout(AdminUiManageLayout)(FaqUiManage);\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"question\", title: \"question\"}\n];\n\nconst adminUiManageFaq = (props) => (\n    <DraggableTable\n        uiPath=\"Faq.json\"\n        items={items}\n        contentKey={\"answer\"}\n    />\n);\n\n\nexport default adminUiManageFaq;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"pageTitle\", title: \"Page title\"},\n    {key: \"urlKey\", title: \"Url Key\"}\n];\n\nconst adminUiManageStatic = (props) => (\n    <DraggableTable\n        uiPath=\"Page.json\"\n        items={items}\n        contentKey=\"content\"\n    />\n);\n\n\nexport default adminUiManageStatic;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"color\", title: \"color\"},\n    {key: \"superuser\", title: \"Only super user can see\", choices:[\"no\", \"yes\"]},\n    {key: \"link\", title: \"link\"},\n];\n\nconst initialLinks = ['/', '/support/', '/faq/', '/admin/'];\n\nconst adminUiManageMenuLink = (props) => (\n    <DraggableTable\n        uiPath=\"MenuLink.json\"\n        items={items}\n        initial={initialLinks}\n        objectKey=\"link\"\n        contentKey={null}\n    />\n);\n\n\nexport default adminUiManageMenuLink;\n","import React from 'react';\nimport DraggableTable from \"../../../components/data_table/DraggableTable\";\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"column\", title: \"column\", choices:[\"Column 2\", \"Column 3\", \"Column 4\"]},\n    {key: \"link\", title: \"link\"},\n    {key: \"newTab\", title: \"Open link in new tab?\", choices: [\"no\", \"yes\"]}\n];\n\nconst extraItems = [\n    {key: \"column1\", title: \"Column 1 content\"},\n    {key: \"column2\", title: \"Column 2 Title\"},\n    {key: \"column3\", title: \"Column 3 Title\"},\n    {key: \"column4\", title: \"Column 4 Title\"},\n];\n\nconst adminUiManageFooterLink = (props) => (\n    <DraggableTable\n        uiPath=\"FooterLink.json\"\n        items={items}\n        extra={extraItems}\n        objectKey=\"link\"\n        contentKey={null}\n    />\n);\n\nexport default adminUiManageFooterLink;\n","import React from 'react';\nimport DraggableTable from \"../../../components/data_table/DraggableTable\";\n\nconst extraItems = [\n    {key: \"sliderHeader\", title: \"Slider title\"},\n    {key: \"sliderSubTitle\", title: \"Slider subtitle\"},\n    {key: \"sliderLink\", title: \"Slider link\"},\n    {key: \"sliderLinkTitle\", title: \"Slider link title\"},\n    {key: \"firstBoxTitle\", title: \"First box title\"},\n    {key: \"firstBoxContent\", title: \"First box content\"},\n];\n\nconst items = [\n    {key: \"title\", title: \"Feature title\"},\n];\n\nconst adminUiManageIndexContent = (props) => (\n    <DraggableTable\n        uiPath=\"Index.json\"\n        items={items}\n        extra={extraItems}\n        objectKey=\"title\"\n        contentKey={null}\n    />\n);\n\nexport default adminUiManageIndexContent;\n","import React from 'react';\nimport DraggableTable from '../../../components/data_table/DraggableTable';\n\nconst items = [\n    {key: \"title\", title: \"title\"},\n    {key: \"type\", title: \"message type\", choices: ['info', 'success', 'warning', 'error']},\n];\n\nconst adminUiManageNotification = (props) => (\n    <DraggableTable\n        uiPath=\"Notification.json\"\n        items={items}\n        contentKey={\"content\"}\n    />\n);\n\n\nexport default adminUiManageNotification;\n","import React from 'react';\nimport MenuBar from \"../../../layouts/main_layout/header/menu_bar/MenuBar\";\nimport { ApiNetwork } from \"../../../network/api\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { TOKEN_KEY } from \"../../../build/constant\";\nimport queryString from 'query-string';\n\nclass Login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        recaptcha: '',\n        siteKey: ''\n    };\n\n    saveContent = (key, value) => {\n        this.setState({[key]: value});\n    };\n\n    redirect = () => {\n        const queryParams = queryString.parse(this.props.location.search);\n        if (queryParams.next) {\n            this.props.history.push(queryParams.next);\n        } else {\n            this.props.history.push(\"/admin/\")\n        }\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem(TOKEN_KEY)) {\n            this.redirect();\n        } else {\n            ApiNetwork.getLogin().then(data => {\n                this.setState({siteKey: data.site_key})\n            })\n        }\n    }\n\n    signIn = (event) => {\n        event.preventDefault();\n        ApiNetwork.login(this.state.username, this.state.password, this.state.recaptcha).then(response => {\n            localStorage.setItem(TOKEN_KEY, response.token);\n            this.redirect();\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"header\">\n                    <MenuBar/>\n                    <div className=\"clear\"/>\n                </div>\n                <div className=\"content\">\n                    <form className=\"with40\" onSubmit={this.signIn}>\n                        <h1>Sign in</h1>\n                        {this.state.siteKey ? (\n                            <React.Fragment>\n                                <label>Username</label>\n                                <input\n                                    type=\"text\"\n                                    // className=\"input\"\n                                    value={this.state.username}\n                                    onChange={event => this.saveContent(\"username\", event.target.value)}\n                                />\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    // className=\"input\"\n                                    value={this.state.password}\n                                    onChange={event => this.saveContent(\"password\", event.target.value)}\n                                />\n                                <div className=\"button-row\">\n                                    <ReCAPTCHA\n                                        sitekey={this.state.siteKey}\n                                        onChange={value => this.saveContent('recaptcha', value)}\n                                    />\n                                </div>\n                                <div className=\"button-row\">\n                                    <button className=\"btn blue\" onClick={this.signIn}>Sign In</button>\n                                </div>\n                            </React.Fragment>\n                        ) : null}\n                    </form>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default Login;\n","import React from 'react';\nimport { Production } from \"../build/production\";\nimport AdminDashboardInfo from \"../page/admin/dashboard/AdminDashboard\";\nimport Error404 from \"../page/errors/error404/Error404\";\nimport Error500 from \"../page/errors/error500/Error500\";\nimport ErrorMaintenance from \"../page/errors/error_maintenance/errorMaintenance\";\nimport ErrorComing from \"../page/errors/error_coming/errorComing\";\nimport Index from \"../page/main/Index\";\nimport StaticPage from \"../page/main/static/StaticPage\";\n\nimport UserMainPage from '../page/user/main/MainPage';\nimport UserConfigPage from '../page/user/config/ConfigPage';\nimport UserWalletPage from \"../page/user/wallet/WalletPage\";\n\nimport Faq from \"../page/main/faq/Faq\";\nimport Support from \"../page/main/support/Support\";\nimport { loadNodeDataAsync } from \"../store/actions/proxyActions\";\nimport { loadApiDashboardAsync, loadApiInfoAsync, loadMessagesAsync } from \"../store/actions/apiActions\";\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport AdminUser from '../page/admin/user/User';\nimport AdminManage from '../page/admin/manage/Manage';\nimport AdminUserMain from '../page/admin/user/UserMain/UserMainPage';\nimport AdminUserWallet from '../page/admin/user/UserWallet/UserWalletPage';\nimport AdminUiManageFaq from '../page/admin/ui_manage/AdminUiManageFaq';\nimport AdminUiManageStatic from '../page/admin/ui_manage/AdminUiManageStatic';\nimport AdminUiManageMenuLink from '../page/admin/ui_manage/AdminUiManageMenuLink';\nimport AdminUiManageFooterLink from '../page/admin/ui_manage/AdminUiManageFooterLink';\nimport AdminUiManageIndexContent from '../page/admin/ui_manage/AdminUiManageIndexContent';\nimport AdminUiManageNotification from '../page/admin/ui_manage/AdminUiManageNotification';\nimport AdminLogin from '../page/admin/login/Login';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.getApiInfo();\n        this.props.getApiDashboard();\n        if (Production.IsProxy()) {\n            this.props.getNodeData();\n        } else {\n            this.props.getMessages();\n        }\n    }\n\n    render = () => {\n        return (\n            <BrowserRouter basename={Production.IsProxy() ? \"dashboard\" : \"\"}>\n                <div className=\"App\">\n                    {Production.IsServer() ? (\n                        <Switch>\n                            <Route path=\"/error/404/\" component={Error404}/>\n                            <Route path=\"/error/500/\" component={Error500}/>\n                            <Route path=\"/error/maintenance/\" component={ErrorMaintenance}/>\n                            <Route path=\"/error/coming/\" component={ErrorComing}/>\n\n                            <Route path=\"/support/\" component={Support}/>\n                            <Route path=\"/faq/\" exact component={Faq}/>\n                            <Route path=\"/user/:userId/\" exact component={UserMainPage}/>\n                            <Route path=\"/user/:userId/wallet/\" exact component={UserWalletPage}/>\n                            <Route path=\"/user/:userId/config/\" exact component={UserConfigPage}/>\n\n                            <Route path=\"/\" exact component={Index}/>\n\n                            <Route path=\"/admin/login/\" exact component={AdminLogin}/>\n                            <Route path=\"/admin/system/\" exact component={AdminDashboardInfo}/>\n                            <Route path=\"/admin/system/stat/\" exact component={AdminDashboardInfo}/>\n                            <Route path=\"/admin/system/block/\" exact component={AdminDashboardInfo}/>\n\n                            <Route path=\"/admin/user/\" exact component={AdminUser}/>\n                            <Route path=\"/admin/user/:userId/\" exact component={AdminUserMain}/>\n                            <Route path=\"/admin/user/:userId/wallet/\" exact component={AdminUserWallet}/>\n                            <Route path=\"/admin/manage/\" exact component={AdminManage}/>\n                            <Route path=\"/admin/ui-manage/faq/\" exact component={AdminUiManageFaq}/>\n                            <Route path=\"/admin/ui-manage/static/\" exact component={AdminUiManageStatic}/>\n                            <Route path=\"/admin/ui-manage/menu/\" exact component={AdminUiManageMenuLink}/>\n                            <Route path=\"/admin/ui-manage/footer/\" exact component={AdminUiManageFooterLink}/>\n                            <Route path=\"/admin/ui-manage/index/\" exact component={AdminUiManageIndexContent}/>\n                            <Route path=\"/admin/ui-manage/notification/\" exact component={AdminUiManageNotification}/>\n                            <Redirect path=\"/admin/ui-manage/\" to=\"/admin/ui-manage/faq\"/>\n                            <Redirect path=\"/admin/\" to=\"/admin/system/\"/>\n                            <Route path=\"/\" component={StaticPage}/>\n\n                            <Redirect to=\"/error/404\"/>\n                        </Switch>\n                    ) : (\n                        <Switch>\n                            <Route path=\"/error/404/\" component={Error404}/>\n                            <Route path=\"/\" exact component={UserMainPage}/>\n                            <Route path=\"/wallet/\" exact component={UserWalletPage}/>\n                            {/*<Route path=\"/config/\" exact component={UserConfigPage}/>*/}\n                            <Redirect to=\"/error/404\"/>\n                        </Switch>\n                    )}\n                </div>\n                {/*<div className={}*/}\n            </BrowserRouter>\n        );\n    };\n}\n\n\nconst mapStateToProps = () => ({});\n\n\nconst mapDispatchToProps = dispatch => {\n    const res = {\n        getApiInfo: () => dispatch(loadApiInfoAsync()),\n        getMessages: () => dispatch(loadMessagesAsync()),\n        getApiDashboard: () => dispatch(loadApiDashboardAsync(false))\n    };\n    if (Production.IsProxy()) {\n        res['getNodeData'] = () => dispatch(loadNodeDataAsync())\n    }\n    return res\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and user)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content_compiler has been fetched,\n              // but the previous service worker will still serve the older\n              // content_compiler until all client tabs are closed.\n              console.log(\n                'New content_compiler is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. app is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store';\n\nReactDOM.render(\n    (\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}