# Play Config
play: {
    # Server's secret key
    http: {
        secret.key: "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n",
        errorHandler: play.api.http.JsonHttpErrorHandler
    }
    logger: {
        # Set true to ignore logger's config file
        includeConfigProperties: true,
        # When size of log file reaches this quota, put it in another file and create a new log file
        max.file.size: 100MB,
        # How long (in day) should log files being kept
        max.history: 7,
        # Maximum size of stored log files
        total.size.cap: 3GB,
        # log all or only json request and responses
        only_json: "true"
    }
    filters {
        hosts {
          # Allow requests to example.com, its subdomains, and localhost:9000.
          allowed = ["localhost", "127.0.0.1", "10.10.10.195"]
        }
        disabled += play.filters.csrf.CSRFFilter
    }
    modules.enabled += "helpers.EagerLoaderModule"
}

http.port: 9000

# Node Config
node: {
    # Full address of the node
    connection: "http://46.4.17.81:9032",
    # Node's API key
    api_key: "623f4e8e440007f45020afabbf56d8ba43144778757ea88497c794ad529a0433"
}

# Pool Config
pool: {
    # Full address of the pool server
    connection: "http://46.4.17.81",
    # Pool server routes
    route: {
        # Route for sending the proof
        proof: "/api/header.json/",
        # Route for sending solutions and shares
        solution: "/api/share.json/",
        # Route for getting pool configurations
        config: "/api/config/value.json/",
        # Route for getting pool specific configurations
        specific_config: "/api/config/value/<pk>.json/",
        # Route for sending generated transactions
        new_transaction: "/api/transaction.json/"
    },
}
