# Play Config
play: {
    # Server's secret key
    http.secret.key: "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n",
    logger: {
        # Set true to ignore logger's config file
        includeConfigProperties: true,
        # When size of log file reaches this quota, put it in another file and create a new log file
        max.file.size: 100MB,
        # How long (in day) should log files being kept
        max.history: 7,
        # Maximum size of stored log files
        total.size.cap: 3GB,
        # log all or only json request and responses
        only_json: "true"
    }
    filters.hosts {
      # Allow requests to example.com, its subdomains, and localhost:9000.
      allowed = ["localhost:9000"]
    }
}

# Node Config
node: {
    # Full address of the node
    connection: "http://localhost:9053",
    # Node's API key
    api_key: "YXAvLL6j92hISbIlzsGKKGP5aJ3tKGGVbTbfH9miiOxFmq77oKATcJW8Ll5Le5b8"
}

# Pool Config
pool: {
    # Full address of the pool server
    connection: "http://localhost:8000",
    # Pool's base
    difficulty: 799144731656113400000000000000000000000000000000000000000000000,
    # Pool's address
    wallet: "bIlzsGKKGP5aJ3tKGGVbTbfH9miiOxFmq77oKATcJW8Ll5Le5b8",
    # Pool server routes
    route: {
        # Route for sending the proof
        proof: "/api/header.json/",
        # Route for sending solutions and shares
        solution: "/api/share.json/",
        # Route for sending generated transactions
        new_transaction: "/api/transaction.json/"
    },
    # Pool server transaction config
    transaction: {
        # Amount of ERG to be send to the pool
        value: 67500000000
    }
}
